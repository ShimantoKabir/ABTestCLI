(()=>{"use strict";var e={513:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.socialPopUp=t.selectors=t.bannerHeadingText=t.rightArrow=t.aboutLinks=t.securities=t.blogs=t.articles=t.publisherName=t.publishedDate=t.publisherLink=t.shareSvgLink=t.linkedinSvgLink=t.twitterSvgLink=t.facebookSvgLink=t.dummyContent=void 0,t.dummyContent="Hello world!",t.facebookSvgLink="https://www.f5.com/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/facebook-grayscale.svg",t.twitterSvgLink="https://www.f5.com/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/twitter-grayscale.svg",t.linkedinSvgLink="https://www.f5.com/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/linkedin-grayscale.svg",t.shareSvgLink="https://www.f5.com/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/addthis_share.svg",t.publisherLink="https://www.f5.com/authors/ian-dinno.thumb.png",t.publishedDate="Feb 08, 2023",t.publisherName="IAN DINNO",t.articles=["The recent <a class='blue-text' href='https://www.t-mobile.com/news/business/customer-information'>data breach disclosure by T-Mobile</a> highlights the challenges of the burgeoning “wild west” of application security—APIs. An individual (or group) was able to collect the personal data of over 30 million customers via use (or abuse) of an API, siphoning off information daily for over a month before detection.","At the time of writing this, not a lot of specifics are known about exactly how or why the API was abused in this case (e.g., abuse of function, broken object level authorization, excessive data exposure) or how the breach was finally realized. Just examining the numbers, on average, data from 902,000 customers was removed via this API per day without triggering any rate-limiting thresholds, time-series behavioral anomalies, etc. Or maybe they were, but not with the appropriate threat level to be quickly identified and have mitigation action taken by operations teams—it has the hallmarks of a low and slow attack.","Breaches like this give us the opportunity to think about how pervasive APIs are, how critical they are for organizations today, and the unique role they can play in the security (or insecurity) of any application and thus an entire organization. In an <a class='blue-text' href='https://www.f5.com/labs/articles/threat-intelligence/post-breach-analysis-sophistication-and-visibility' >analysis of breaches</a> in recent years, F5 Labs has noticed that in most scenarios where incidents are related to APIs, the breach method is technically very simple and impacts public-facing, poorly secured API endpoints.","Security, when it comes to APIs, is easier said than done (at least done well). With the wave of application security event data being generated for the growing number of applications and endpoints being monitored by most organizations these days, it feels like an impossible task to stay on top of everything.","However, there are three core elements that this attack highlights around API security specifically that organizations can all learn from in prioritizing technology and services that deliver:","API Visibility and Discovery. In this case, it’s not clear if this specific API was known or being actively monitored. Positive security, relying on securely developed and well-documented APIs with schema enforcement functionality, is critical but only half the equation. Chances are most organizations don’t have a handle on every API they have running in their environment, so being able to constantly learn and map APIs that aren’t already documented across all communication paths of an application is of the upmost importance. Discovery technology allows organizations to map their entire API landscape, exposing unknown/shadow APIs, abandoned or zombie APIs to block/remove, and any unknown “good” APIs that should be considered for governance, providing more comprehensive oversight.","Knowing an API exists and having access control capabilities are two critical pieces to the API security puzzle. In our <a class='blue-text' href='https://www.f5.com/state-of-application-strategy-report' >2022 State of Application Strategy Report</a>, 68% of respondents ranked authentication and authorization as the most valuable components of API security—followed not far behind by Behavioral Analysis and Anomaly Detection to monitor APIs, identifying and alerting on abnormal behavior and potential abuse, since there are many ways bad actors can easily bypass authentication and authorization. In this scenario, something about the data being passed between the API and the client must have been unusual. Being able to track API behavior over time once it is in production would generally include API request analysis and time series anomaly detection to build baseline behavioral attributes that would be used to identify anomalies in request rates, errors, latency, throughput, etc. With this functionality, an alerting element is critical to raise issues when unexpected spikes or drops occur, unique traffic patterns are present, or abnormal API requests are detected.","Rounding out a modern API security stack requires an In-Line Application and API Security Enforcement Engine, most likely including a WAF with multiple layers of application security functionality, such as granular L7 policy enforcement with Rate limiting, IP reputation, Allow/Deny list functionality, and L7 DoS with capabilities to further investigate and act on malicious endpoints, users, and other activity. This allows operations teams to quickly and easily identify suspected API abuse as anomalies are detected and create policies to stop that misuse, better protecting APIs and app endpoints over time as they evolve and behavior changes.","More is surely to come out as time passes and we learn about what exactly happened during this specific breach, but it is critical that organizations leverage these three elements to evaluate and better develop a plan to secure their apps and API endpoints from abuse like this.","Learn more about API Security Challenges and Tips for Modern AppDev and API Security","This <a class='black-text' href='https://www.f5.com/solutions/forrester-report-api-security-threats-and-solutions-b' >Forester “API Insecurity” Report</a> highlights the increasing challenges with modern app development and API security, delivering tips on implementing security as part of modern app and API development workflows."],t.blogs=[{href:"https://www.f5.com/company/blog/secure-multi-cloud-networking",imgSrc:"https://medianet.com/cro/f5/bl029/related-blogs/1_blog-multicloud-illustration.png",linkText:"Hybrid, Multi-cloud - Why F5 Invests",title:"BLOG"},{href:"https://www.f5.com/company/blog/mastering-api-architecture-api-fundamentals",imgSrc:"https://medianet.com/cro/f5/bl029/related-blogs/2_blog-mastering-api-fundamentals.png",linkText:"Mastering API Architecture: API Fundamentals",title:"BLOG"},{href:"https://www.f5.com/company/blog/taking-bad-bots-head-on-with-f5-and-aws",imgSrc:"https://medianet.com/cro/f5/bl029/related-blogs/3_taking-bad-bots-head-on.png",linkText:"Taking Bad Bots Head On with F5 and AWS",title:"BLOG"},{href:"https://www.f5.com/company/blog/mitigating-architectural-risk",imgSrc:"https://medianet.com/cro/f5/bl029/related-blogs/4_mitigating-architectural-risk.png",linkText:"Mitigating Architectural<br> Risk",title:"BLOG"},{href:"https://www.f5.com/company/blog/f5-distributed-cloud-services-stands-up-to-l7-ddos-attacks",imgSrc:"https://medianet.com/cro/f5/bl029/related-blogs/5_xc-stands-up-to-emerging-ddos-attacks.png",linkText:"F5 Distributed Cloud Services Stands Up to Emerging L7 DDoS Attacks",title:"BLOG"}],t.securities=[{href:"https://www.f5.com/solutions/use-cases/multi-cloud-networking",imgSrc:"https://medianet.com/cro/f5/bl029/additional-resources/1_multi-cloud-networking.png",linkText:"Build Anywhere with Comprehensive Multi-Cloud Networking",title:"Use Case"},{href:"https://www.f5.com/resources/reports/state-of-application-strategy-report",imgSrc:"https://medianet.com/cro/f5/bl029/additional-resources/2_soas-2023-illo-option-cover.png",linkText:"2023 State of Application Strategy<br> Report",title:"Report"},{href:"https://www.f5.com/solutions/forrester-report-api-security-threats-and-solutions-b",imgSrc:"https://medianet.com/cro/f5/bl029/additional-resources/3_F5-apis-forrester-report-gated.png",linkText:"API Security in the hybrid multi cloud<br> world",title:"Forester Report"}],t.aboutLinks=[{href:"https://www.f5.com/solutions/waap-buyers-guide-ebook",imgSrc:"https://medianet.com/cro/f5/bl029/additional-resources/4_waap-buying-guide.png",linkText:"WAAP Buying Guide: Security as a Digital Differentiator",title:"eBook"},{href:"https://community.f5.com/t5/technical-articles/f5-hybrid-security-architectures-one-waf-engine-total/ta-p/307248",imgSrc:"https://medianet.com/cro/f5/bl029/additional-resources/5_hybrid-security-architectures-one-waf-engine.png",linkText:"F5 Hybrid Security Architectures: One WAF Engine, Total Flexibility",title:"Article"},{href:"#dummy",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"F5 Announces General Availability of NGINXaaS for Azure",title:"BLOG"}],t.rightArrow='\n<svg width="15" height="15" viewBox="0 0 17 18" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M15.9766 8.99805L0.976562 8.99805" stroke="#0E6EB9" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />\n  <path d="M8.80859 16.498L15.9767 8.99805L8.80859 1.49805" stroke="#0E6EB9" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />\n</svg>\n',t.bannerHeadingText="Lessons Learned (So Far) from the T-Mobile Breach",t.selectors={bannerSelector:"div#platter1878393716",hiddenSectionSelector:"div#platter-287410563"},t.socialPopUp={facebook:{url:"https://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=ra-5095d30f38626622&source=tbx-300&lng=en&s=facebook&url=https%3A%2F%2Fwww.f5.com%2Fcompany%2Fblog%2Fthe-future-is-platform-engineering&title=The%20Future%20Is%20Platform%20Engineering&ate=AT-ra-5095d30f38626622/-/-/64272068af9b790a/2&frommenu=1&ips=1&uid=6427199ca63bf0b9&description=Engineering%20platforms%20offer%20self-serve%20access%20to%20secure%2C%20validated%2C%20and%20reusable%20tools%20and%20workflows%20designed%20specifically%20for%20the%20development%20teams%20who%20will%20use%20them%2C%20increasing%20productivity%20while%20providing%20operational%20guardrails%20for%20security%20and%20stability.&uud=1&ct=1&tt=0&captcha_provider=recaptcha2&pro=1",name:"Facebook"},twitter:{url:"https://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=ra-5095d30f38626622&source=men-300&lng=en&s=twitter&url=https%3A%2F%2Fwww.f5.com%2Fcompany%2Fblog%2Fthe-future-is-platform-engineering&title=The%20Future%20Is%20Platform%20Engineering&ate=AT-ra-5095d30f38626622/-/-/64272068af9b790a/4&frommenu=1&ips=1&uid=6427199ca63bf0b9&description=Engineering%20platforms%20offer%20self-serve%20access%20to%20secure%2C%20validated%2C%20and%20reusable%20tools%20and%20workflows%20designed%20specifically%20for%20the%20development%20teams%20who%20will%20use%20them%2C%20increasing%20productivity%20while%20providing%20operational%20guardrails%20for%20security%20and%20stability.&uud=1&ct=1&tt=0&captcha_provider=recaptcha2&pro=1",name:"Twitter"},linkedin:{url:"https://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=ra-5095d30f38626622&source=men-300&lng=en&s=linkedin&url=https%3A%2F%2Fwww.f5.com%2Fcompany%2Fblog%2Fthe-future-is-platform-engineering&title=The%20Future%20Is%20Platform%20Engineering&ate=AT-ra-5095d30f38626622/-/-/64272068af9b790a/5&frommenu=1&ips=1&uid=6427199ca63bf0b9&description=Engineering%20platforms%20offer%20self-serve%20access%20to%20secure%2C%20validated%2C%20and%20reusable%20tools%20and%20workflows%20designed%20specifically%20for%20the%20development%20teams%20who%20will%20use%20them%2C%20increasing%20productivity%20while%20providing%20operational%20guardrails%20for%20security%20and%20stability.&uud=1&ct=1&tt=0&captcha_provider=recaptcha2&pro=1",name:"Linkedin"}}},336:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TestInfo=void 0,(n=t.TestInfo||(t.TestInfo={})).ID="BL029",n.SITE="f5",n.CLIENT="brainlab",n.VARIATION="2"},698:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ArticleItemComponent=void 0;var i=n(336),o=function(){function e(){}return e.render=function(e){return'<p class="'.concat(i.TestInfo.ID,'__article-item-component" >').concat(e,"</p>").trim()},e}();t.ArticleItemComponent=o},442:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ArticleComponent=void 0;var i=n(513),o=n(336),a=n(698),r=function(){function e(){}return e.render=function(){return'\n    <div class="'.concat(o.TestInfo.ID,'__article-component" >\n      ').concat(i.articles.map((function(e){return a.ArticleItemComponent.render(e)})).join("\n"),"\n    </div>\n    ").trim()},e}();t.ArticleComponent=r},480:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BlogItemComponent=void 0;var i=n(513),o=n(336),a=function(){function e(){}return e.render=function(e,t){var n=!1,a=e.linkText;return"2"===o.TestInfo.VARIATION.toString()&&1==t&&(n=!0),"1"===o.TestInfo.VARIATION.toString()&&(n=!0),"2"===o.TestInfo.VARIATION.toString()&&0==t&&(a=a.replace("<br>","")),'\n    <div class="'.concat(o.TestInfo.ID,"__blog-item-component ").concat("#dummy"===e.href&&o.TestInfo.ID+"__hidden",'" >\n      <div class="blog-img ').concat(t&&o.TestInfo.ID+"__hide",'" >\n        <img src="').concat(e.imgSrc,'" alt="blog-img" />\n      </div>\n      <div class="blog-title ').concat(n&&o.TestInfo.ID+"__hide",'" > \n        <a href="').concat(e.href,'" >').concat(e.title,'</a>\n      </div>\n      <div class="blog-link" >\n        <a href="').concat(e.href,'" >').concat(a," ").concat(i.rightArrow,"</a>\n      </div>\n    </div>\n    ").trim()},e}();t.BlogItemComponent=a},697:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BlogComponent=void 0;var i=n(336),o=n(480),a=function(){function e(){}return e.render=function(e,t,n){return'\n    <div class="'.concat(i.TestInfo.ID,'__blog-component" >\n      <div class="blog-heading" >\n        <h4>').concat(e,'</h4>\n      </div>\n      <div class="blogs" >\n        ').concat(t.map((function(e){return o.BlogItemComponent.render(e,n)})).join("\n"),"\n      </div>\n    </div>\n    ").trim()},e}();t.BlogComponent=a},416:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainComponent=void 0;var i=n(951),o=n(513),a=n(336),r=n(577),s=n(639),c=n(883);t.MainComponent=function(){var e=this;this.hiddenSectionSelector=o.selectors.hiddenSectionSelector,this.bannerSelector=o.selectors.bannerSelector,this.init=function(){var t;i.Initializer.init(a.TestInfo,"0.0.1"),null===(t=document.querySelector(e.hiddenSectionSelector))||void 0===t||t.classList.add(a.TestInfo.ID+"__hide");var n=document.querySelector(e.bannerSelector+" h1");n&&(n.textContent=o.bannerHeadingText),"1"===a.TestInfo.VARIATION.toString()&&(new r.VOneComponent).render(),"2"===a.TestInfo.VARIATION.toString()&&(new s.VTwoComponent).render(),c.SocialComponent.addEventListener()}}},286:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PublisherComponent=void 0;var i=n(513),o=n(336),a=function(){function e(){}return e.render=function(){return'\n    <div class="'.concat(o.TestInfo.ID,'__published-component" >\n        <div class="publisher-info" >\n            <div class="publisher-img" >\n                <img src="').concat(i.publisherLink,'" alt="publisher" >\n            </div>\n            <div class="publisher-name" >\n                <a href="#" >').concat(i.publisherName,'</a>\n            </div>\n        </div>\n        <div class="published-date" >\n            <p>').concat(i.publishedDate,"</p>\n        </div>\n    </div>\n    ").trim()},e}();t.PublisherComponent=a},883:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SocialComponent=void 0;var i=n(513),o=n(336),a=function(){function e(){}var t;return t=e,e.render=function(){return'\n    <div class="'.concat(o.TestInfo.ID,'__social-component">\n      <ul class="">\n        <li>\n          <a class="').concat(o.TestInfo.ID,'__facebook" title="Facebook" href="#">\n            <img src="/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/facebook-grayscale.svg" alt="Share to Facebook">\n          </a>\n        </li>\n        <li>\n          <a class="').concat(o.TestInfo.ID,'__twitter" title="twitter" href="#">\n            <img src="/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/twitter-grayscale.svg" alt="Share to Twitter">\n          </a>\n        </li>\n        <li>\n          <a class="').concat(o.TestInfo.ID,'__linkedin" title="LinkedIn" href="#">\n            <img src="/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/linkedin-grayscale.svg" alt="Share to Linkedin">\n          </a>\n        </li>\n        <li>\n          <a class="').concat(o.TestInfo.ID,'__share" title="share" href="#">\n            <img src="/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/addthis_share.svg" alt="Share via AddThis">\n          </a>\n        </li>\n      </ul>\n    </div>\n    ')},e.addEventListener=function(){var e,n,a,r;null===(e=document.querySelector("a."+o.TestInfo.ID+"__facebook"))||void 0===e||e.addEventListener("click",(function(){t.popUp(i.socialPopUp.facebook.url,i.socialPopUp.facebook.name)})),null===(n=document.querySelector("a."+o.TestInfo.ID+"__twitter"))||void 0===n||n.addEventListener("click",(function(){t.popUp(i.socialPopUp.twitter.url,i.socialPopUp.twitter.name)})),null===(a=document.querySelector("a."+o.TestInfo.ID+"__linkedin"))||void 0===a||a.addEventListener("click",(function(){t.popUp(i.socialPopUp.linkedin.url,i.socialPopUp.linkedin.name)})),null===(r=document.querySelector("a."+o.TestInfo.ID+"__share"))||void 0===r||r.addEventListener("click",(function(){var e=document.querySelector("a.addthis_button_compact.at300m");e&&e.click()}))},e.popUp=function(e,t){var n=window.open(e,t,"height=500,width=500");return n&&n.focus(),!1},e}();t.SocialComponent=a},577:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VOneComponent=void 0;var i=n(513),o=n(336),a=n(442),r=n(697),s=n(286),c=n(883);t.VOneComponent=function(){var e=this;this.hiddenSectionSelector=i.selectors.hiddenSectionSelector,this.getHtml=function(){return'\n    <div class="'.concat(o.TestInfo.ID,'__main-component" >\n        ').concat(c.SocialComponent.render(),'\n        <div class="published-article-blog-footer" >\n            <div class="published-article-blog" >\n                <div class="published-article" >\n                    ').concat(s.PublisherComponent.render(),"\n                    ").concat(a.ArticleComponent.render(),"\n                </div>\n                ").concat(r.BlogComponent.render("Related Blogs",i.blogs,!1),'\n            </div>\n            <div class="').concat(o.TestInfo.ID,'__footer" >\n              <div class="footer footer-left" >\n                ').concat(r.BlogComponent.render("Additional Resources",i.securities,!0),'\n              </div>\n              <div class="footer footer-right" >\n                ').concat(r.BlogComponent.render("Additional Resources",i.aboutLinks,!0),"\n              </div>\n            </div>\n        </div>\n    </div>\n    ").trim()},this.render=function(){var t;null===(t=document.querySelector(e.hiddenSectionSelector))||void 0===t||t.insertAdjacentHTML("beforebegin",e.getHtml())}}},639:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VTwoComponent=void 0;var i=n(513),o=n(336),a=n(442),r=n(697),s=n(286),c=n(883);t.VTwoComponent=function(){var e=this;this.hiddenSectionSelector=i.selectors.hiddenSectionSelector,this.getHtml=function(){return'\n    <div class="'.concat(o.TestInfo.ID,'__main-component" >\n      ').concat(c.SocialComponent.render(),'\n      <div class="published-article-blog-footer" >\n          <div class="published-article-blog" >\n              <div class="published-article" >\n                  ').concat(s.PublisherComponent.render(),"\n                  ").concat(a.ArticleComponent.render(),"\n              </div>\n              ").concat(r.BlogComponent.render("Related Blogs",i.blogs,!0),'\n          </div>\n          <div class="').concat(o.TestInfo.ID,'__footer" >\n            <div class="footer footer-left" >\n              ').concat(r.BlogComponent.render("Additional Resources",i.securities,!1),'\n            </div>\n            <div class="footer footer-right" >\n              ').concat(r.BlogComponent.render("Additional Resources",i.aboutLinks,!1),"\n            </div>\n          </div>\n      </div>\n    </div>\n    ").trim()},this.render=function(){var t;null===(t=document.querySelector(e.hiddenSectionSelector))||void 0===t||t.insertAdjacentHTML("afterend",e.getHtml())}}},951:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Initializer=void 0;var n=function(){function e(){}return e.init=function(e,t){document.documentElement.classList.add(e.ID),document.documentElement.classList.add("".concat(e.ID,"-").concat(e.VARIATION)),console.info("ID: ".concat(e.ID,", VARIATION: ").concat(e.VARIATION,", VERSION: ").concat(t," is running.....!"))},e}();t.Initializer=n},454:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Poller=void 0;var i=n(704);t.Poller=function(){var e=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(t,n,o){e.callback=n,e.options=new i.UserOptions,e.conditionsLength=t.length,o&&(e.options=o),e.timeout=e.options.timeout?new Date(e.getNow()+e.options.timeout).getTime():null;for(var a=0;a<t.length;a++)e.pollForCondition(t[a],e.options.wait,!0,e.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(e.timeout&&e.getNow()>e.timeout)},this.evaluateCondition=function(e){return!!e&&("function"==typeof e?e():!("string"!=typeof e||!document.querySelector(e)))},this.isAllConditionPassed=function(){return e.conditionsLength===e.successfulConditions.length},this.pollForCondition=function(t,n,i,o){if(e.timeout&&e.isTimeOut())return!1;var a=e.evaluateCondition(t);return a?(e.successfulConditions.push(a),e.isAllConditionPassed()&&e.callback(e.successfulConditions)):setTimeout((function(){e.pollForCondition(t,n*o,i,o)}),i?0:n),!0}}},704:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UserOptions=void 0;t.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},t={};function n(i){var o=t[i];if(void 0!==o)return o.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,n),a.exports}(()=>{var e=n(454),t=n(513),i=n(416);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var o=new i.MainComponent;(new e.Poller).poll(["body",t.selectors.bannerSelector,t.selectors.hiddenSectionSelector],o.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQ0gsT0FBT0EsRUFBYUUsUUFHckIsSUFBSUMsRUFBU04sRUFBeUJFLEdBQVksQ0FHakRHLFFBQVMsQ0FBQyxHQU9YLE9BSEFFLEVBQW9CTCxHQUFVSSxFQUFRQSxFQUFPRCxRQUFTSixHQUcvQ0ssRUFBT0QsT0FDZixDLE1DdEJBLGFBQ0EsU0FDQSxTQU1BLElBSmlCLDRDQUE0Q0csS0FDM0Q3QyxPQUFPOEMsVUFBVUMsV0FHSixDQUNiLElBQU1DLEVBQU8sSUFBSSxFQUFBbkUsZUFDRixJQUFJLEVBQUE2QixRQUNaTSxLQUVMLENBQUMsT0FBUSxFQUFBaEUsVUFBVUMsZUFBZ0IsRUFBQUQsVUFBVUUsdUJBQzdDOEYsRUFBS2xFLEsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hYi10ZXN0LXRzLWNsaS8uL3NyYy9jbGllbnRzL2JyYWlubGFiL2Y1L0JMMDI5L2NvbW1vbi9hc3NldC50cyIsIndlYnBhY2s6Ly9hYi10ZXN0LXRzLWNsaS8uL3NyYy9jbGllbnRzL2JyYWlubGFiL2Y1L0JMMDI5L2NvbW1vbi90ZXN0LmluZm8udHMiLCJ3ZWJwYWNrOi8vYWItdGVzdC10cy1jbGkvLi9zcmMvY2xpZW50cy9icmFpbmxhYi9mNS9CTDAyOS9jb21wb25lbnRzL2FydGljbGUtaXRlbS5jb21wb25lbnQudHMiLCJ3ZWJwYWNrOi8vYWItdGVzdC10cy1jbGkvLi9zcmMvY2xpZW50cy9icmFpbmxhYi9mNS9CTDAyOS9jb21wb25lbnRzL2FydGljbGUuY29tcG9uZW50LnRzIiwid2VicGFjazovL2FiLXRlc3QtdHMtY2xpLy4vc3JjL2NsaWVudHMvYnJhaW5sYWIvZjUvQkwwMjkvY29tcG9uZW50cy9ibG9nLWl0ZW0uY29tcG9uZW50LnRzIiwid2VicGFjazovL2FiLXRlc3QtdHMtY2xpLy4vc3JjL2NsaWVudHMvYnJhaW5sYWIvZjUvQkwwMjkvY29tcG9uZW50cy9ibG9nLmNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly9hYi10ZXN0LXRzLWNsaS8uL3NyYy9jbGllbnRzL2JyYWlubGFiL2Y1L0JMMDI5L2NvbXBvbmVudHMvbWFpbi5jb21wb25lbnQudHMiLCJ3ZWJwYWNrOi8vYWItdGVzdC10cy1jbGkvLi9zcmMvY2xpZW50cy9icmFpbmxhYi9mNS9CTDAyOS9jb21wb25lbnRzL3B1Ymxpc2hlci5jb21wb25lbnQudHMiLCJ3ZWJwYWNrOi8vYWItdGVzdC10cy1jbGkvLi9zcmMvY2xpZW50cy9icmFpbmxhYi9mNS9CTDAyOS9jb21wb25lbnRzL3NvY2lhbC5jb21wb25lbnQudHMiLCJ3ZWJwYWNrOi8vYWItdGVzdC10cy1jbGkvLi9zcmMvY2xpZW50cy9icmFpbmxhYi9mNS9CTDAyOS92YXJpYXRpb25zL3Ytb25lLmNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly9hYi10ZXN0LXRzLWNsaS8uL3NyYy9jbGllbnRzL2JyYWlubGFiL2Y1L0JMMDI5L3ZhcmlhdGlvbnMvdi10d28uY29tcG9uZW50LnRzIiwid2VicGFjazovL2FiLXRlc3QtdHMtY2xpLy4vc3JjL3V0aWxpdGllcy9pbml0aWFsaXplci50cyIsIndlYnBhY2s6Ly9hYi10ZXN0LXRzLWNsaS8uL3NyYy91dGlsaXRpZXMvcG9sbGVyLnRzIiwid2VicGFjazovL2FiLXRlc3QtdHMtY2xpLy4vc3JjL3V0aWxpdGllcy91c2VyLm9wdGlvbnMudHMiLCJ3ZWJwYWNrOi8vYWItdGVzdC10cy1jbGkvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYWItdGVzdC10cy1jbGkvLi9zcmMvY2xpZW50cy9icmFpbmxhYi9mNS9CTDAyOS9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXJ0TW9kZWwgfSBmcm9tIFwiLi4vbW9kZWxzL2NhcnQubW9kZWxcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBkdW1teUNvbnRlbnQ6IHN0cmluZyA9IFwiSGVsbG8gd29ybGQhXCI7XHJcbmV4cG9ydCBjb25zdCBmYWNlYm9va1N2Z0xpbms6IHN0cmluZyA9XHJcbiAgXCJodHRwczovL3d3dy5mNS5jb20vZXRjLmNsaWVudGxpYnMvYmFzZS9jbGllbnRsaWJzL2Jhc2UtcmVzb3VyY2VzL3Jlc291cmNlcy9pY29ucy9zb2NpYWwvZmFjZWJvb2stZ3JheXNjYWxlLnN2Z1wiO1xyXG5leHBvcnQgY29uc3QgdHdpdHRlclN2Z0xpbms6IHN0cmluZyA9XHJcbiAgXCJodHRwczovL3d3dy5mNS5jb20vZXRjLmNsaWVudGxpYnMvYmFzZS9jbGllbnRsaWJzL2Jhc2UtcmVzb3VyY2VzL3Jlc291cmNlcy9pY29ucy9zb2NpYWwvdHdpdHRlci1ncmF5c2NhbGUuc3ZnXCI7XHJcbmV4cG9ydCBjb25zdCBsaW5rZWRpblN2Z0xpbms6IHN0cmluZyA9XHJcbiAgXCJodHRwczovL3d3dy5mNS5jb20vZXRjLmNsaWVudGxpYnMvYmFzZS9jbGllbnRsaWJzL2Jhc2UtcmVzb3VyY2VzL3Jlc291cmNlcy9pY29ucy9zb2NpYWwvbGlua2VkaW4tZ3JheXNjYWxlLnN2Z1wiO1xyXG5leHBvcnQgY29uc3Qgc2hhcmVTdmdMaW5rOiBzdHJpbmcgPVxyXG4gIFwiaHR0cHM6Ly93d3cuZjUuY29tL2V0Yy5jbGllbnRsaWJzL2Jhc2UvY2xpZW50bGlicy9iYXNlLXJlc291cmNlcy9yZXNvdXJjZXMvaWNvbnMvc29jaWFsL2FkZHRoaXNfc2hhcmUuc3ZnXCI7XHJcbmV4cG9ydCBjb25zdCBwdWJsaXNoZXJMaW5rOiBzdHJpbmcgPVxyXG4gIFwiaHR0cHM6Ly93d3cuZjUuY29tL2F1dGhvcnMvaWFuLWRpbm5vLnRodW1iLnBuZ1wiO1xyXG5leHBvcnQgY29uc3QgcHVibGlzaGVkRGF0ZSA9IFwiRmViIDA4LCAyMDIzXCI7XHJcbmV4cG9ydCBjb25zdCBwdWJsaXNoZXJOYW1lID0gXCJJQU4gRElOTk9cIjtcclxuXHJcbmV4cG9ydCBjb25zdCBhcnRpY2xlczogc3RyaW5nW10gPSBbXHJcbiAgXCJUaGUgcmVjZW50IDxhIGNsYXNzPSdibHVlLXRleHQnIGhyZWY9J2h0dHBzOi8vd3d3LnQtbW9iaWxlLmNvbS9uZXdzL2J1c2luZXNzL2N1c3RvbWVyLWluZm9ybWF0aW9uJz5kYXRhIGJyZWFjaCBkaXNjbG9zdXJlIGJ5IFQtTW9iaWxlPC9hPiBoaWdobGlnaHRzIHRoZSBjaGFsbGVuZ2VzIG9mIHRoZSBidXJnZW9uaW5nIOKAnHdpbGQgd2VzdOKAnSBvZiBhcHBsaWNhdGlvbiBzZWN1cml0eeKAlEFQSXMuIEFuIGluZGl2aWR1YWwgKG9yIGdyb3VwKSB3YXMgYWJsZSB0byBjb2xsZWN0IHRoZSBwZXJzb25hbCBkYXRhIG9mIG92ZXIgMzAgbWlsbGlvbiBjdXN0b21lcnMgdmlhIHVzZSAob3IgYWJ1c2UpIG9mIGFuIEFQSSwgc2lwaG9uaW5nIG9mZiBpbmZvcm1hdGlvbiBkYWlseSBmb3Igb3ZlciBhIG1vbnRoIGJlZm9yZSBkZXRlY3Rpb24uXCIsXHJcbiAgXCJBdCB0aGUgdGltZSBvZiB3cml0aW5nIHRoaXMsIG5vdCBhIGxvdCBvZiBzcGVjaWZpY3MgYXJlIGtub3duIGFib3V0IGV4YWN0bHkgaG93IG9yIHdoeSB0aGUgQVBJIHdhcyBhYnVzZWQgaW4gdGhpcyBjYXNlIChlLmcuLCBhYnVzZSBvZiBmdW5jdGlvbiwgYnJva2VuIG9iamVjdCBsZXZlbCBhdXRob3JpemF0aW9uLCBleGNlc3NpdmUgZGF0YSBleHBvc3VyZSkgb3IgaG93IHRoZSBicmVhY2ggd2FzIGZpbmFsbHkgcmVhbGl6ZWQuIEp1c3QgZXhhbWluaW5nIHRoZSBudW1iZXJzLCBvbiBhdmVyYWdlLCBkYXRhIGZyb20gOTAyLDAwMCBjdXN0b21lcnMgd2FzIHJlbW92ZWQgdmlhIHRoaXMgQVBJIHBlciBkYXkgd2l0aG91dCB0cmlnZ2VyaW5nIGFueSByYXRlLWxpbWl0aW5nIHRocmVzaG9sZHMsIHRpbWUtc2VyaWVzIGJlaGF2aW9yYWwgYW5vbWFsaWVzLCBldGMuIE9yIG1heWJlIHRoZXkgd2VyZSwgYnV0IG5vdCB3aXRoIHRoZSBhcHByb3ByaWF0ZSB0aHJlYXQgbGV2ZWwgdG8gYmUgcXVpY2tseSBpZGVudGlmaWVkIGFuZCBoYXZlIG1pdGlnYXRpb24gYWN0aW9uIHRha2VuIGJ5IG9wZXJhdGlvbnMgdGVhbXPigJRpdCBoYXMgdGhlIGhhbGxtYXJrcyBvZiBhIGxvdyBhbmQgc2xvdyBhdHRhY2suXCIsXHJcbiAgXCJCcmVhY2hlcyBsaWtlIHRoaXMgZ2l2ZSB1cyB0aGUgb3Bwb3J0dW5pdHkgdG8gdGhpbmsgYWJvdXQgaG93IHBlcnZhc2l2ZSBBUElzIGFyZSwgaG93IGNyaXRpY2FsIHRoZXkgYXJlIGZvciBvcmdhbml6YXRpb25zIHRvZGF5LCBhbmQgdGhlIHVuaXF1ZSByb2xlIHRoZXkgY2FuIHBsYXkgaW4gdGhlIHNlY3VyaXR5IChvciBpbnNlY3VyaXR5KSBvZiBhbnkgYXBwbGljYXRpb24gYW5kIHRodXMgYW4gZW50aXJlIG9yZ2FuaXphdGlvbi4gSW4gYW4gPGEgY2xhc3M9J2JsdWUtdGV4dCcgaHJlZj0naHR0cHM6Ly93d3cuZjUuY29tL2xhYnMvYXJ0aWNsZXMvdGhyZWF0LWludGVsbGlnZW5jZS9wb3N0LWJyZWFjaC1hbmFseXNpcy1zb3BoaXN0aWNhdGlvbi1hbmQtdmlzaWJpbGl0eScgPmFuYWx5c2lzIG9mIGJyZWFjaGVzPC9hPiBpbiByZWNlbnQgeWVhcnMsIEY1IExhYnMgaGFzIG5vdGljZWQgdGhhdCBpbiBtb3N0IHNjZW5hcmlvcyB3aGVyZSBpbmNpZGVudHMgYXJlIHJlbGF0ZWQgdG8gQVBJcywgdGhlIGJyZWFjaCBtZXRob2QgaXMgdGVjaG5pY2FsbHkgdmVyeSBzaW1wbGUgYW5kIGltcGFjdHMgcHVibGljLWZhY2luZywgcG9vcmx5IHNlY3VyZWQgQVBJIGVuZHBvaW50cy5cIixcclxuICBcIlNlY3VyaXR5LCB3aGVuIGl0IGNvbWVzIHRvIEFQSXMsIGlzIGVhc2llciBzYWlkIHRoYW4gZG9uZSAoYXQgbGVhc3QgZG9uZSB3ZWxsKS4gV2l0aCB0aGUgd2F2ZSBvZiBhcHBsaWNhdGlvbiBzZWN1cml0eSBldmVudCBkYXRhIGJlaW5nIGdlbmVyYXRlZCBmb3IgdGhlIGdyb3dpbmcgbnVtYmVyIG9mIGFwcGxpY2F0aW9ucyBhbmQgZW5kcG9pbnRzIGJlaW5nIG1vbml0b3JlZCBieSBtb3N0IG9yZ2FuaXphdGlvbnMgdGhlc2UgZGF5cywgaXQgZmVlbHMgbGlrZSBhbiBpbXBvc3NpYmxlIHRhc2sgdG8gc3RheSBvbiB0b3Agb2YgZXZlcnl0aGluZy5cIixcclxuICBcIkhvd2V2ZXIsIHRoZXJlIGFyZSB0aHJlZSBjb3JlIGVsZW1lbnRzIHRoYXQgdGhpcyBhdHRhY2sgaGlnaGxpZ2h0cyBhcm91bmQgQVBJIHNlY3VyaXR5IHNwZWNpZmljYWxseSB0aGF0IG9yZ2FuaXphdGlvbnMgY2FuIGFsbCBsZWFybiBmcm9tIGluIHByaW9yaXRpemluZyB0ZWNobm9sb2d5IGFuZCBzZXJ2aWNlcyB0aGF0IGRlbGl2ZXI6XCIsXHJcbiAgXCJBUEkgVmlzaWJpbGl0eSBhbmQgRGlzY292ZXJ5LiBJbiB0aGlzIGNhc2UsIGl04oCZcyBub3QgY2xlYXIgaWYgdGhpcyBzcGVjaWZpYyBBUEkgd2FzIGtub3duIG9yIGJlaW5nIGFjdGl2ZWx5IG1vbml0b3JlZC4gUG9zaXRpdmUgc2VjdXJpdHksIHJlbHlpbmcgb24gc2VjdXJlbHkgZGV2ZWxvcGVkIGFuZCB3ZWxsLWRvY3VtZW50ZWQgQVBJcyB3aXRoIHNjaGVtYSBlbmZvcmNlbWVudCBmdW5jdGlvbmFsaXR5LCBpcyBjcml0aWNhbCBidXQgb25seSBoYWxmIHRoZSBlcXVhdGlvbi4gQ2hhbmNlcyBhcmUgbW9zdCBvcmdhbml6YXRpb25zIGRvbuKAmXQgaGF2ZSBhIGhhbmRsZSBvbiBldmVyeSBBUEkgdGhleSBoYXZlIHJ1bm5pbmcgaW4gdGhlaXIgZW52aXJvbm1lbnQsIHNvIGJlaW5nIGFibGUgdG8gY29uc3RhbnRseSBsZWFybiBhbmQgbWFwIEFQSXMgdGhhdCBhcmVu4oCZdCBhbHJlYWR5IGRvY3VtZW50ZWQgYWNyb3NzIGFsbCBjb21tdW5pY2F0aW9uIHBhdGhzIG9mIGFuIGFwcGxpY2F0aW9uIGlzIG9mIHRoZSB1cG1vc3QgaW1wb3J0YW5jZS4gRGlzY292ZXJ5IHRlY2hub2xvZ3kgYWxsb3dzIG9yZ2FuaXphdGlvbnMgdG8gbWFwIHRoZWlyIGVudGlyZSBBUEkgbGFuZHNjYXBlLCBleHBvc2luZyB1bmtub3duL3NoYWRvdyBBUElzLCBhYmFuZG9uZWQgb3Igem9tYmllIEFQSXMgdG8gYmxvY2svcmVtb3ZlLCBhbmQgYW55IHVua25vd24g4oCcZ29vZOKAnSBBUElzIHRoYXQgc2hvdWxkIGJlIGNvbnNpZGVyZWQgZm9yIGdvdmVybmFuY2UsIHByb3ZpZGluZyBtb3JlIGNvbXByZWhlbnNpdmUgb3ZlcnNpZ2h0LlwiLFxyXG4gIFwiS25vd2luZyBhbiBBUEkgZXhpc3RzIGFuZCBoYXZpbmcgYWNjZXNzIGNvbnRyb2wgY2FwYWJpbGl0aWVzIGFyZSB0d28gY3JpdGljYWwgcGllY2VzIHRvIHRoZSBBUEkgc2VjdXJpdHkgcHV6emxlLiBJbiBvdXIgPGEgY2xhc3M9J2JsdWUtdGV4dCcgaHJlZj0naHR0cHM6Ly93d3cuZjUuY29tL3N0YXRlLW9mLWFwcGxpY2F0aW9uLXN0cmF0ZWd5LXJlcG9ydCcgPjIwMjIgU3RhdGUgb2YgQXBwbGljYXRpb24gU3RyYXRlZ3kgUmVwb3J0PC9hPiwgNjglIG9mIHJlc3BvbmRlbnRzIHJhbmtlZCBhdXRoZW50aWNhdGlvbiBhbmQgYXV0aG9yaXphdGlvbiBhcyB0aGUgbW9zdCB2YWx1YWJsZSBjb21wb25lbnRzIG9mIEFQSSBzZWN1cml0eeKAlGZvbGxvd2VkIG5vdCBmYXIgYmVoaW5kIGJ5IEJlaGF2aW9yYWwgQW5hbHlzaXMgYW5kIEFub21hbHkgRGV0ZWN0aW9uIHRvIG1vbml0b3IgQVBJcywgaWRlbnRpZnlpbmcgYW5kIGFsZXJ0aW5nIG9uIGFibm9ybWFsIGJlaGF2aW9yIGFuZCBwb3RlbnRpYWwgYWJ1c2UsIHNpbmNlIHRoZXJlIGFyZSBtYW55IHdheXMgYmFkIGFjdG9ycyBjYW4gZWFzaWx5IGJ5cGFzcyBhdXRoZW50aWNhdGlvbiBhbmQgYXV0aG9yaXphdGlvbi4gSW4gdGhpcyBzY2VuYXJpbywgc29tZXRoaW5nIGFib3V0IHRoZSBkYXRhIGJlaW5nIHBhc3NlZCBiZXR3ZWVuIHRoZSBBUEkgYW5kIHRoZSBjbGllbnQgbXVzdCBoYXZlIGJlZW4gdW51c3VhbC4gQmVpbmcgYWJsZSB0byB0cmFjayBBUEkgYmVoYXZpb3Igb3ZlciB0aW1lIG9uY2UgaXQgaXMgaW4gcHJvZHVjdGlvbiB3b3VsZCBnZW5lcmFsbHkgaW5jbHVkZSBBUEkgcmVxdWVzdCBhbmFseXNpcyBhbmQgdGltZSBzZXJpZXMgYW5vbWFseSBkZXRlY3Rpb24gdG8gYnVpbGQgYmFzZWxpbmUgYmVoYXZpb3JhbCBhdHRyaWJ1dGVzIHRoYXQgd291bGQgYmUgdXNlZCB0byBpZGVudGlmeSBhbm9tYWxpZXMgaW4gcmVxdWVzdCByYXRlcywgZXJyb3JzLCBsYXRlbmN5LCB0aHJvdWdocHV0LCBldGMuIFdpdGggdGhpcyBmdW5jdGlvbmFsaXR5LCBhbiBhbGVydGluZyBlbGVtZW50IGlzIGNyaXRpY2FsIHRvIHJhaXNlIGlzc3VlcyB3aGVuIHVuZXhwZWN0ZWQgc3Bpa2VzIG9yIGRyb3BzIG9jY3VyLCB1bmlxdWUgdHJhZmZpYyBwYXR0ZXJucyBhcmUgcHJlc2VudCwgb3IgYWJub3JtYWwgQVBJIHJlcXVlc3RzIGFyZSBkZXRlY3RlZC5cIixcclxuICBcIlJvdW5kaW5nIG91dCBhIG1vZGVybiBBUEkgc2VjdXJpdHkgc3RhY2sgcmVxdWlyZXMgYW4gSW4tTGluZSBBcHBsaWNhdGlvbiBhbmQgQVBJIFNlY3VyaXR5IEVuZm9yY2VtZW50IEVuZ2luZSwgbW9zdCBsaWtlbHkgaW5jbHVkaW5nIGEgV0FGIHdpdGggbXVsdGlwbGUgbGF5ZXJzIG9mIGFwcGxpY2F0aW9uIHNlY3VyaXR5IGZ1bmN0aW9uYWxpdHksIHN1Y2ggYXMgZ3JhbnVsYXIgTDcgcG9saWN5IGVuZm9yY2VtZW50IHdpdGggUmF0ZSBsaW1pdGluZywgSVAgcmVwdXRhdGlvbiwgQWxsb3cvRGVueSBsaXN0IGZ1bmN0aW9uYWxpdHksIGFuZCBMNyBEb1Mgd2l0aCBjYXBhYmlsaXRpZXMgdG8gZnVydGhlciBpbnZlc3RpZ2F0ZSBhbmQgYWN0IG9uIG1hbGljaW91cyBlbmRwb2ludHMsIHVzZXJzLCBhbmQgb3RoZXIgYWN0aXZpdHkuIFRoaXMgYWxsb3dzIG9wZXJhdGlvbnMgdGVhbXMgdG8gcXVpY2tseSBhbmQgZWFzaWx5IGlkZW50aWZ5IHN1c3BlY3RlZCBBUEkgYWJ1c2UgYXMgYW5vbWFsaWVzIGFyZSBkZXRlY3RlZCBhbmQgY3JlYXRlIHBvbGljaWVzIHRvIHN0b3AgdGhhdCBtaXN1c2UsIGJldHRlciBwcm90ZWN0aW5nIEFQSXMgYW5kIGFwcCBlbmRwb2ludHMgb3ZlciB0aW1lIGFzIHRoZXkgZXZvbHZlIGFuZCBiZWhhdmlvciBjaGFuZ2VzLlwiLFxyXG4gIFwiTW9yZSBpcyBzdXJlbHkgdG8gY29tZSBvdXQgYXMgdGltZSBwYXNzZXMgYW5kIHdlIGxlYXJuIGFib3V0IHdoYXQgZXhhY3RseSBoYXBwZW5lZCBkdXJpbmcgdGhpcyBzcGVjaWZpYyBicmVhY2gsIGJ1dCBpdCBpcyBjcml0aWNhbCB0aGF0IG9yZ2FuaXphdGlvbnMgbGV2ZXJhZ2UgdGhlc2UgdGhyZWUgZWxlbWVudHMgdG8gZXZhbHVhdGUgYW5kIGJldHRlciBkZXZlbG9wIGEgcGxhbiB0byBzZWN1cmUgdGhlaXIgYXBwcyBhbmQgQVBJIGVuZHBvaW50cyBmcm9tIGFidXNlIGxpa2UgdGhpcy5cIixcclxuICBcIkxlYXJuIG1vcmUgYWJvdXQgQVBJIFNlY3VyaXR5IENoYWxsZW5nZXMgYW5kIFRpcHMgZm9yIE1vZGVybiBBcHBEZXYgYW5kIEFQSSBTZWN1cml0eVwiLFxyXG4gIFwiVGhpcyA8YSBjbGFzcz0nYmxhY2stdGV4dCcgaHJlZj0naHR0cHM6Ly93d3cuZjUuY29tL3NvbHV0aW9ucy9mb3JyZXN0ZXItcmVwb3J0LWFwaS1zZWN1cml0eS10aHJlYXRzLWFuZC1zb2x1dGlvbnMtYicgPkZvcmVzdGVyIOKAnEFQSSBJbnNlY3VyaXR54oCdIFJlcG9ydDwvYT4gaGlnaGxpZ2h0cyB0aGUgaW5jcmVhc2luZyBjaGFsbGVuZ2VzIHdpdGggbW9kZXJuIGFwcCBkZXZlbG9wbWVudCBhbmQgQVBJIHNlY3VyaXR5LCBkZWxpdmVyaW5nIHRpcHMgb24gaW1wbGVtZW50aW5nIHNlY3VyaXR5IGFzIHBhcnQgb2YgbW9kZXJuIGFwcCBhbmQgQVBJIGRldmVsb3BtZW50IHdvcmtmbG93cy5cIixcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBibG9nczogQ2FydE1vZGVsW10gPSBbXHJcbiAge1xyXG4gICAgaHJlZjogXCJodHRwczovL3d3dy5mNS5jb20vY29tcGFueS9ibG9nL3NlY3VyZS1tdWx0aS1jbG91ZC1uZXR3b3JraW5nXCIsXHJcbiAgICBpbWdTcmM6XHJcbiAgICAgIFwiaHR0cHM6Ly9tZWRpYW5ldC5jb20vY3JvL2Y1L2JsMDI5L3JlbGF0ZWQtYmxvZ3MvMV9ibG9nLW11bHRpY2xvdWQtaWxsdXN0cmF0aW9uLnBuZ1wiLFxyXG4gICAgbGlua1RleHQ6IFwiSHlicmlkLCBNdWx0aS1jbG91ZCAtIFdoeSBGNSBJbnZlc3RzXCIsXHJcbiAgICB0aXRsZTogXCJCTE9HXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBocmVmOiBcImh0dHBzOi8vd3d3LmY1LmNvbS9jb21wYW55L2Jsb2cvbWFzdGVyaW5nLWFwaS1hcmNoaXRlY3R1cmUtYXBpLWZ1bmRhbWVudGFsc1wiLFxyXG4gICAgaW1nU3JjOlxyXG4gICAgICBcImh0dHBzOi8vbWVkaWFuZXQuY29tL2Nyby9mNS9ibDAyOS9yZWxhdGVkLWJsb2dzLzJfYmxvZy1tYXN0ZXJpbmctYXBpLWZ1bmRhbWVudGFscy5wbmdcIixcclxuICAgIGxpbmtUZXh0OiBcIk1hc3RlcmluZyBBUEkgQXJjaGl0ZWN0dXJlOiBBUEkgRnVuZGFtZW50YWxzXCIsXHJcbiAgICB0aXRsZTogXCJCTE9HXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBocmVmOiBcImh0dHBzOi8vd3d3LmY1LmNvbS9jb21wYW55L2Jsb2cvdGFraW5nLWJhZC1ib3RzLWhlYWQtb24td2l0aC1mNS1hbmQtYXdzXCIsXHJcbiAgICBpbWdTcmM6XHJcbiAgICAgIFwiaHR0cHM6Ly9tZWRpYW5ldC5jb20vY3JvL2Y1L2JsMDI5L3JlbGF0ZWQtYmxvZ3MvM190YWtpbmctYmFkLWJvdHMtaGVhZC1vbi5wbmdcIixcclxuICAgIGxpbmtUZXh0OiBcIlRha2luZyBCYWQgQm90cyBIZWFkIE9uIHdpdGggRjUgYW5kIEFXU1wiLFxyXG4gICAgdGl0bGU6IFwiQkxPR1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaHJlZjogXCJodHRwczovL3d3dy5mNS5jb20vY29tcGFueS9ibG9nL21pdGlnYXRpbmctYXJjaGl0ZWN0dXJhbC1yaXNrXCIsXHJcbiAgICBpbWdTcmM6XHJcbiAgICAgIFwiaHR0cHM6Ly9tZWRpYW5ldC5jb20vY3JvL2Y1L2JsMDI5L3JlbGF0ZWQtYmxvZ3MvNF9taXRpZ2F0aW5nLWFyY2hpdGVjdHVyYWwtcmlzay5wbmdcIixcclxuICAgIGxpbmtUZXh0OiBcIk1pdGlnYXRpbmcgQXJjaGl0ZWN0dXJhbDxicj4gUmlza1wiLFxyXG4gICAgdGl0bGU6IFwiQkxPR1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaHJlZjogXCJodHRwczovL3d3dy5mNS5jb20vY29tcGFueS9ibG9nL2Y1LWRpc3RyaWJ1dGVkLWNsb3VkLXNlcnZpY2VzLXN0YW5kcy11cC10by1sNy1kZG9zLWF0dGFja3NcIixcclxuICAgIGltZ1NyYzpcclxuICAgICAgXCJodHRwczovL21lZGlhbmV0LmNvbS9jcm8vZjUvYmwwMjkvcmVsYXRlZC1ibG9ncy81X3hjLXN0YW5kcy11cC10by1lbWVyZ2luZy1kZG9zLWF0dGFja3MucG5nXCIsXHJcbiAgICBsaW5rVGV4dDpcclxuICAgICAgXCJGNSBEaXN0cmlidXRlZCBDbG91ZCBTZXJ2aWNlcyBTdGFuZHMgVXAgdG8gRW1lcmdpbmcgTDcgRERvUyBBdHRhY2tzXCIsXHJcbiAgICB0aXRsZTogXCJCTE9HXCIsXHJcbiAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBzZWN1cml0aWVzOiBDYXJ0TW9kZWxbXSA9IFtcclxuICB7XHJcbiAgICBocmVmOiBcImh0dHBzOi8vd3d3LmY1LmNvbS9zb2x1dGlvbnMvdXNlLWNhc2VzL211bHRpLWNsb3VkLW5ldHdvcmtpbmdcIixcclxuICAgIGltZ1NyYzpcclxuICAgICAgXCJodHRwczovL21lZGlhbmV0LmNvbS9jcm8vZjUvYmwwMjkvYWRkaXRpb25hbC1yZXNvdXJjZXMvMV9tdWx0aS1jbG91ZC1uZXR3b3JraW5nLnBuZ1wiLFxyXG4gICAgbGlua1RleHQ6IFwiQnVpbGQgQW55d2hlcmUgd2l0aCBDb21wcmVoZW5zaXZlIE11bHRpLUNsb3VkIE5ldHdvcmtpbmdcIixcclxuICAgIHRpdGxlOiBcIlVzZSBDYXNlXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBocmVmOiBcImh0dHBzOi8vd3d3LmY1LmNvbS9yZXNvdXJjZXMvcmVwb3J0cy9zdGF0ZS1vZi1hcHBsaWNhdGlvbi1zdHJhdGVneS1yZXBvcnRcIixcclxuICAgIGltZ1NyYzpcclxuICAgICAgXCJodHRwczovL21lZGlhbmV0LmNvbS9jcm8vZjUvYmwwMjkvYWRkaXRpb25hbC1yZXNvdXJjZXMvMl9zb2FzLTIwMjMtaWxsby1vcHRpb24tY292ZXIucG5nXCIsXHJcbiAgICBsaW5rVGV4dDogXCIyMDIzIFN0YXRlIG9mIEFwcGxpY2F0aW9uIFN0cmF0ZWd5PGJyPiBSZXBvcnRcIixcclxuICAgIHRpdGxlOiBcIlJlcG9ydFwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaHJlZjogXCJodHRwczovL3d3dy5mNS5jb20vc29sdXRpb25zL2ZvcnJlc3Rlci1yZXBvcnQtYXBpLXNlY3VyaXR5LXRocmVhdHMtYW5kLXNvbHV0aW9ucy1iXCIsXHJcbiAgICBpbWdTcmM6XHJcbiAgICAgIFwiaHR0cHM6Ly9tZWRpYW5ldC5jb20vY3JvL2Y1L2JsMDI5L2FkZGl0aW9uYWwtcmVzb3VyY2VzLzNfRjUtYXBpcy1mb3JyZXN0ZXItcmVwb3J0LWdhdGVkLnBuZ1wiLFxyXG4gICAgbGlua1RleHQ6IFwiQVBJIFNlY3VyaXR5IGluIHRoZSBoeWJyaWQgbXVsdGkgY2xvdWQ8YnI+IHdvcmxkXCIsXHJcbiAgICB0aXRsZTogXCJGb3Jlc3RlciBSZXBvcnRcIixcclxuICB9LFxyXG5dO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFib3V0TGlua3M6IENhcnRNb2RlbFtdID0gW1xyXG4gIHtcclxuICAgIGhyZWY6IFwiaHR0cHM6Ly93d3cuZjUuY29tL3NvbHV0aW9ucy93YWFwLWJ1eWVycy1ndWlkZS1lYm9va1wiLFxyXG4gICAgaW1nU3JjOlxyXG4gICAgICBcImh0dHBzOi8vbWVkaWFuZXQuY29tL2Nyby9mNS9ibDAyOS9hZGRpdGlvbmFsLXJlc291cmNlcy80X3dhYXAtYnV5aW5nLWd1aWRlLnBuZ1wiLFxyXG4gICAgbGlua1RleHQ6IFwiV0FBUCBCdXlpbmcgR3VpZGU6IFNlY3VyaXR5IGFzIGEgRGlnaXRhbCBEaWZmZXJlbnRpYXRvclwiLFxyXG4gICAgdGl0bGU6IFwiZUJvb2tcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGhyZWY6IFwiaHR0cHM6Ly9jb21tdW5pdHkuZjUuY29tL3Q1L3RlY2huaWNhbC1hcnRpY2xlcy9mNS1oeWJyaWQtc2VjdXJpdHktYXJjaGl0ZWN0dXJlcy1vbmUtd2FmLWVuZ2luZS10b3RhbC90YS1wLzMwNzI0OFwiLFxyXG4gICAgaW1nU3JjOlxyXG4gICAgICBcImh0dHBzOi8vbWVkaWFuZXQuY29tL2Nyby9mNS9ibDAyOS9hZGRpdGlvbmFsLXJlc291cmNlcy81X2h5YnJpZC1zZWN1cml0eS1hcmNoaXRlY3R1cmVzLW9uZS13YWYtZW5naW5lLnBuZ1wiLFxyXG4gICAgbGlua1RleHQ6XHJcbiAgICAgIFwiRjUgSHlicmlkIFNlY3VyaXR5IEFyY2hpdGVjdHVyZXM6IE9uZSBXQUYgRW5naW5lLCBUb3RhbCBGbGV4aWJpbGl0eVwiLFxyXG4gICAgdGl0bGU6IFwiQXJ0aWNsZVwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaHJlZjogXCIjZHVtbXlcIixcclxuICAgIGltZ1NyYzpcclxuICAgICAgXCJodHRwczovL3d3dy5mNS5jb20vY29udGVudC9kYW0vZjUtY29tL2dsb2JhbC1hc3NldHMvcmVzb3VyY2VzLWZlYXR1cmV0dGVzL2Rpc3QtY2xvdWQtYmxvZy1mZWF0dXJlXzczMHg1MDgucG5nXCIsXHJcbiAgICBsaW5rVGV4dDogXCJGNSBBbm5vdW5jZXMgR2VuZXJhbCBBdmFpbGFiaWxpdHkgb2YgTkdJTlhhYVMgZm9yIEF6dXJlXCIsXHJcbiAgICB0aXRsZTogXCJCTE9HXCIsXHJcbiAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCByaWdodEFycm93ID0gYFxyXG48c3ZnIHdpZHRoPVwiMTVcIiBoZWlnaHQ9XCIxNVwiIHZpZXdCb3g9XCIwIDAgMTcgMThcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuICA8cGF0aCBkPVwiTTE1Ljk3NjYgOC45OTgwNUwwLjk3NjU2MiA4Ljk5ODA1XCIgc3Ryb2tlPVwiIzBFNkVCOVwiIHN0cm9rZS13aWR0aD1cIjEuNVwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiIC8+XHJcbiAgPHBhdGggZD1cIk04LjgwODU5IDE2LjQ5OEwxNS45NzY3IDguOTk4MDVMOC44MDg1OSAxLjQ5ODA1XCIgc3Ryb2tlPVwiIzBFNkVCOVwiIHN0cm9rZS13aWR0aD1cIjEuNVwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiIC8+XHJcbjwvc3ZnPlxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJhbm5lckhlYWRpbmdUZXh0ID1cclxuICBcIkxlc3NvbnMgTGVhcm5lZCAoU28gRmFyKSBmcm9tIHRoZSBULU1vYmlsZSBCcmVhY2hcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RvcnMgPSB7XHJcbiAgYmFubmVyU2VsZWN0b3I6IFwiZGl2I3BsYXR0ZXIxODc4MzkzNzE2XCIsXHJcbiAgaGlkZGVuU2VjdGlvblNlbGVjdG9yOiBcImRpdiNwbGF0dGVyLTI4NzQxMDU2M1wiLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNvY2lhbFBvcFVwID0ge1xyXG4gIGZhY2Vib29rOiB7XHJcbiAgICB1cmw6IFwiaHR0cHM6Ly93d3cuYWRkdGhpcy5jb20vYm9va21hcmsucGhwP3Y9MzAwJndpbm5hbWU9YWRkdGhpcyZwdWI9cmEtNTA5NWQzMGYzODYyNjYyMiZzb3VyY2U9dGJ4LTMwMCZsbmc9ZW4mcz1mYWNlYm9vayZ1cmw9aHR0cHMlM0ElMkYlMkZ3d3cuZjUuY29tJTJGY29tcGFueSUyRmJsb2clMkZ0aGUtZnV0dXJlLWlzLXBsYXRmb3JtLWVuZ2luZWVyaW5nJnRpdGxlPVRoZSUyMEZ1dHVyZSUyMElzJTIwUGxhdGZvcm0lMjBFbmdpbmVlcmluZyZhdGU9QVQtcmEtNTA5NWQzMGYzODYyNjYyMi8tLy0vNjQyNzIwNjhhZjliNzkwYS8yJmZyb21tZW51PTEmaXBzPTEmdWlkPTY0MjcxOTljYTYzYmYwYjkmZGVzY3JpcHRpb249RW5naW5lZXJpbmclMjBwbGF0Zm9ybXMlMjBvZmZlciUyMHNlbGYtc2VydmUlMjBhY2Nlc3MlMjB0byUyMHNlY3VyZSUyQyUyMHZhbGlkYXRlZCUyQyUyMGFuZCUyMHJldXNhYmxlJTIwdG9vbHMlMjBhbmQlMjB3b3JrZmxvd3MlMjBkZXNpZ25lZCUyMHNwZWNpZmljYWxseSUyMGZvciUyMHRoZSUyMGRldmVsb3BtZW50JTIwdGVhbXMlMjB3aG8lMjB3aWxsJTIwdXNlJTIwdGhlbSUyQyUyMGluY3JlYXNpbmclMjBwcm9kdWN0aXZpdHklMjB3aGlsZSUyMHByb3ZpZGluZyUyMG9wZXJhdGlvbmFsJTIwZ3VhcmRyYWlscyUyMGZvciUyMHNlY3VyaXR5JTIwYW5kJTIwc3RhYmlsaXR5LiZ1dWQ9MSZjdD0xJnR0PTAmY2FwdGNoYV9wcm92aWRlcj1yZWNhcHRjaGEyJnBybz0xXCIsXHJcbiAgICBuYW1lOiBcIkZhY2Vib29rXCIsXHJcbiAgfSxcclxuICB0d2l0dGVyOiB7XHJcbiAgICB1cmw6IFwiaHR0cHM6Ly93d3cuYWRkdGhpcy5jb20vYm9va21hcmsucGhwP3Y9MzAwJndpbm5hbWU9YWRkdGhpcyZwdWI9cmEtNTA5NWQzMGYzODYyNjYyMiZzb3VyY2U9bWVuLTMwMCZsbmc9ZW4mcz10d2l0dGVyJnVybD1odHRwcyUzQSUyRiUyRnd3dy5mNS5jb20lMkZjb21wYW55JTJGYmxvZyUyRnRoZS1mdXR1cmUtaXMtcGxhdGZvcm0tZW5naW5lZXJpbmcmdGl0bGU9VGhlJTIwRnV0dXJlJTIwSXMlMjBQbGF0Zm9ybSUyMEVuZ2luZWVyaW5nJmF0ZT1BVC1yYS01MDk1ZDMwZjM4NjI2NjIyLy0vLS82NDI3MjA2OGFmOWI3OTBhLzQmZnJvbW1lbnU9MSZpcHM9MSZ1aWQ9NjQyNzE5OWNhNjNiZjBiOSZkZXNjcmlwdGlvbj1FbmdpbmVlcmluZyUyMHBsYXRmb3JtcyUyMG9mZmVyJTIwc2VsZi1zZXJ2ZSUyMGFjY2VzcyUyMHRvJTIwc2VjdXJlJTJDJTIwdmFsaWRhdGVkJTJDJTIwYW5kJTIwcmV1c2FibGUlMjB0b29scyUyMGFuZCUyMHdvcmtmbG93cyUyMGRlc2lnbmVkJTIwc3BlY2lmaWNhbGx5JTIwZm9yJTIwdGhlJTIwZGV2ZWxvcG1lbnQlMjB0ZWFtcyUyMHdobyUyMHdpbGwlMjB1c2UlMjB0aGVtJTJDJTIwaW5jcmVhc2luZyUyMHByb2R1Y3Rpdml0eSUyMHdoaWxlJTIwcHJvdmlkaW5nJTIwb3BlcmF0aW9uYWwlMjBndWFyZHJhaWxzJTIwZm9yJTIwc2VjdXJpdHklMjBhbmQlMjBzdGFiaWxpdHkuJnV1ZD0xJmN0PTEmdHQ9MCZjYXB0Y2hhX3Byb3ZpZGVyPXJlY2FwdGNoYTImcHJvPTFcIixcclxuICAgIG5hbWU6IFwiVHdpdHRlclwiLFxyXG4gIH0sXHJcbiAgbGlua2VkaW46IHtcclxuICAgIHVybDogXCJodHRwczovL3d3dy5hZGR0aGlzLmNvbS9ib29rbWFyay5waHA/dj0zMDAmd2lubmFtZT1hZGR0aGlzJnB1Yj1yYS01MDk1ZDMwZjM4NjI2NjIyJnNvdXJjZT1tZW4tMzAwJmxuZz1lbiZzPWxpbmtlZGluJnVybD1odHRwcyUzQSUyRiUyRnd3dy5mNS5jb20lMkZjb21wYW55JTJGYmxvZyUyRnRoZS1mdXR1cmUtaXMtcGxhdGZvcm0tZW5naW5lZXJpbmcmdGl0bGU9VGhlJTIwRnV0dXJlJTIwSXMlMjBQbGF0Zm9ybSUyMEVuZ2luZWVyaW5nJmF0ZT1BVC1yYS01MDk1ZDMwZjM4NjI2NjIyLy0vLS82NDI3MjA2OGFmOWI3OTBhLzUmZnJvbW1lbnU9MSZpcHM9MSZ1aWQ9NjQyNzE5OWNhNjNiZjBiOSZkZXNjcmlwdGlvbj1FbmdpbmVlcmluZyUyMHBsYXRmb3JtcyUyMG9mZmVyJTIwc2VsZi1zZXJ2ZSUyMGFjY2VzcyUyMHRvJTIwc2VjdXJlJTJDJTIwdmFsaWRhdGVkJTJDJTIwYW5kJTIwcmV1c2FibGUlMjB0b29scyUyMGFuZCUyMHdvcmtmbG93cyUyMGRlc2lnbmVkJTIwc3BlY2lmaWNhbGx5JTIwZm9yJTIwdGhlJTIwZGV2ZWxvcG1lbnQlMjB0ZWFtcyUyMHdobyUyMHdpbGwlMjB1c2UlMjB0aGVtJTJDJTIwaW5jcmVhc2luZyUyMHByb2R1Y3Rpdml0eSUyMHdoaWxlJTIwcHJvdmlkaW5nJTIwb3BlcmF0aW9uYWwlMjBndWFyZHJhaWxzJTIwZm9yJTIwc2VjdXJpdHklMjBhbmQlMjBzdGFiaWxpdHkuJnV1ZD0xJmN0PTEmdHQ9MCZjYXB0Y2hhX3Byb3ZpZGVyPXJlY2FwdGNoYTImcHJvPTFcIixcclxuICAgIG5hbWU6IFwiTGlua2VkaW5cIixcclxuICB9LFxyXG59O1xyXG4iLCJleHBvcnQgZW51bSBUZXN0SW5mbyB7SUQgPSAnQkwwMjknLCBTSVRFID0gJ2Y1JywgQ0xJRU5UID0gJ2JyYWlubGFiJywgVkFSSUFUSU9OID0gJzInfSIsImltcG9ydCB7IFRlc3RJbmZvIH0gZnJvbSBcIi4uL2NvbW1vbi90ZXN0LmluZm9cIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBBcnRpY2xlSXRlbUNvbXBvbmVudCB7XHJcbiAgc3RhdGljIHJlbmRlciA9ICh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xyXG4gICAgY29uc3QgaHRtbFN0ciA9IGA8cCBjbGFzcz1cIiR7VGVzdEluZm8uSUR9X19hcnRpY2xlLWl0ZW0tY29tcG9uZW50XCIgPiR7dGV4dH08L3A+YDtcclxuICAgIHJldHVybiBodG1sU3RyLnRyaW0oKTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCB7IGFydGljbGVzIH0gZnJvbSBcIi4uL2NvbW1vbi9hc3NldFwiO1xyXG5pbXBvcnQgeyBUZXN0SW5mbyB9IGZyb20gXCIuLi9jb21tb24vdGVzdC5pbmZvXCI7XHJcbmltcG9ydCB7IEFydGljbGVJdGVtQ29tcG9uZW50IH0gZnJvbSBcIi4vYXJ0aWNsZS1pdGVtLmNvbXBvbmVudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFydGljbGVDb21wb25lbnQge1xyXG4gIHN0YXRpYyByZW5kZXIgPSAoKTogc3RyaW5nID0+IHtcclxuICAgIGNvbnN0IGh0bWxTdHIgPSBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiJHtUZXN0SW5mby5JRH1fX2FydGljbGUtY29tcG9uZW50XCIgPlxyXG4gICAgICAke2FydGljbGVzLm1hcCgoYSkgPT4gQXJ0aWNsZUl0ZW1Db21wb25lbnQucmVuZGVyKGEpKS5qb2luKFwiXFxuXCIpfVxyXG4gICAgPC9kaXY+XHJcbiAgICBgO1xyXG4gICAgcmV0dXJuIGh0bWxTdHIudHJpbSgpO1xyXG4gIH07XHJcbn1cclxuIiwiaW1wb3J0IHsgcmlnaHRBcnJvdyB9IGZyb20gXCIuLi9jb21tb24vYXNzZXRcIjtcclxuaW1wb3J0IHsgVGVzdEluZm8gfSBmcm9tIFwiLi4vY29tbW9uL3Rlc3QuaW5mb1wiO1xyXG5pbXBvcnQgeyBDYXJ0TW9kZWwgfSBmcm9tIFwiLi4vbW9kZWxzL2NhcnQubW9kZWxcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBCbG9nSXRlbUNvbXBvbmVudCB7XHJcbiAgc3RhdGljIHJlbmRlciA9IChjYXJkTW9kZWw6IENhcnRNb2RlbCwgb25seUxpbms6IGJvb2xlYW4pOiBzdHJpbmcgPT4ge1xyXG4gICAgbGV0IHNob3dCbG9nVGl0bGU6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIGxldCBsaW5rVGV4dDogc3RyaW5nID0gY2FyZE1vZGVsLmxpbmtUZXh0O1xyXG5cclxuICAgIGlmIChUZXN0SW5mby5WQVJJQVRJT04udG9TdHJpbmcoKSA9PT0gXCIyXCIgJiYgb25seUxpbmsgPT0gdHJ1ZSkge1xyXG4gICAgICBzaG93QmxvZ1RpdGxlID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoVGVzdEluZm8uVkFSSUFUSU9OLnRvU3RyaW5nKCkgPT09IFwiMVwiKSB7XHJcbiAgICAgIHNob3dCbG9nVGl0bGUgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChUZXN0SW5mby5WQVJJQVRJT04udG9TdHJpbmcoKSA9PT0gXCIyXCIgJiYgb25seUxpbmsgPT0gZmFsc2UpIHtcclxuICAgICAgbGlua1RleHQgPSBsaW5rVGV4dC5yZXBsYWNlKFwiPGJyPlwiLCBcIlwiKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBodG1sU3RyID0gYFxyXG4gICAgPGRpdiBjbGFzcz1cIiR7VGVzdEluZm8uSUR9X19ibG9nLWl0ZW0tY29tcG9uZW50ICR7XHJcbiAgICAgIGNhcmRNb2RlbC5ocmVmID09PSBcIiNkdW1teVwiICYmIFRlc3RJbmZvLklEICsgXCJfX2hpZGRlblwiXHJcbiAgICB9XCIgPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiYmxvZy1pbWcgJHtvbmx5TGluayAmJiBUZXN0SW5mby5JRCArIFwiX19oaWRlXCJ9XCIgPlxyXG4gICAgICAgIDxpbWcgc3JjPVwiJHtjYXJkTW9kZWwuaW1nU3JjfVwiIGFsdD1cImJsb2ctaW1nXCIgLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJibG9nLXRpdGxlICR7c2hvd0Jsb2dUaXRsZSAmJiBUZXN0SW5mby5JRCArIFwiX19oaWRlXCJ9XCIgPiBcclxuICAgICAgICA8YSBocmVmPVwiJHtjYXJkTW9kZWwuaHJlZn1cIiA+JHtjYXJkTW9kZWwudGl0bGV9PC9hPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cImJsb2ctbGlua1wiID5cclxuICAgICAgICA8YSBocmVmPVwiJHtjYXJkTW9kZWwuaHJlZn1cIiA+JHtsaW5rVGV4dH0gJHtyaWdodEFycm93fTwvYT5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIGA7XHJcbiAgICByZXR1cm4gaHRtbFN0ci50cmltKCk7XHJcbiAgfTtcclxufVxyXG4iLCJpbXBvcnQgeyBUZXN0SW5mbyB9IGZyb20gXCIuLi9jb21tb24vdGVzdC5pbmZvXCI7XHJcbmltcG9ydCB7IENhcnRNb2RlbCB9IGZyb20gXCIuLi9tb2RlbHMvY2FydC5tb2RlbFwiO1xyXG5pbXBvcnQgeyBCbG9nSXRlbUNvbXBvbmVudCB9IGZyb20gXCIuL2Jsb2ctaXRlbS5jb21wb25lbnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBCbG9nQ29tcG9uZW50IHtcclxuICBzdGF0aWMgcmVuZGVyID0gKFxyXG4gICAgaGVhZGxpbmU6IHN0cmluZyxcclxuICAgIGJsb2dzOiBDYXJ0TW9kZWxbXSxcclxuICAgIG9ubHlMaW5rOiBib29sZWFuXHJcbiAgKTogc3RyaW5nID0+IHtcclxuICAgIGNvbnN0IGh0bWxTdHIgPSBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiJHtUZXN0SW5mby5JRH1fX2Jsb2ctY29tcG9uZW50XCIgPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiYmxvZy1oZWFkaW5nXCIgPlxyXG4gICAgICAgIDxoND4ke2hlYWRsaW5lfTwvaDQ+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiYmxvZ3NcIiA+XHJcbiAgICAgICAgJHtibG9nc1xyXG4gICAgICAgICAgLm1hcCgoYmxvZykgPT4gQmxvZ0l0ZW1Db21wb25lbnQucmVuZGVyKGJsb2csIG9ubHlMaW5rKSlcclxuICAgICAgICAgIC5qb2luKFwiXFxuXCIpfVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgYDtcclxuICAgIHJldHVybiBodG1sU3RyLnRyaW0oKTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCB7IEluaXRpYWxpemVyIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3V0aWxpdGllcy9pbml0aWFsaXplclwiO1xyXG5pbXBvcnQgeyBiYW5uZXJIZWFkaW5nVGV4dCwgc2VsZWN0b3JzIH0gZnJvbSBcIi4uL2NvbW1vbi9hc3NldFwiO1xyXG5pbXBvcnQgeyBUZXN0SW5mbyB9IGZyb20gXCIuLi9jb21tb24vdGVzdC5pbmZvXCI7XHJcbmltcG9ydCB7IFZPbmVDb21wb25lbnQgfSBmcm9tIFwiLi4vdmFyaWF0aW9ucy92LW9uZS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgVlR3b0NvbXBvbmVudCB9IGZyb20gXCIuLi92YXJpYXRpb25zL3YtdHdvLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBTb2NpYWxDb21wb25lbnQgfSBmcm9tIFwiLi9zb2NpYWwuY29tcG9uZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTWFpbkNvbXBvbmVudCB7XHJcbiAgaGlkZGVuU2VjdGlvblNlbGVjdG9yID0gc2VsZWN0b3JzLmhpZGRlblNlY3Rpb25TZWxlY3RvcjtcclxuICBiYW5uZXJTZWxlY3RvciA9IHNlbGVjdG9ycy5iYW5uZXJTZWxlY3RvcjtcclxuXHJcbiAgaW5pdCA9ICgpOiB2b2lkID0+IHtcclxuICAgIEluaXRpYWxpemVyLmluaXQoVGVzdEluZm8sIFwiMC4wLjFcIik7XHJcbiAgICBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLmhpZGRlblNlY3Rpb25TZWxlY3RvcilcclxuICAgICAgPy5jbGFzc0xpc3QuYWRkKFRlc3RJbmZvLklEICsgXCJfX2hpZGVcIik7XHJcblxyXG4gICAgY29uc3QgYmFubmVySGVhZGluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5iYW5uZXJTZWxlY3RvciArIFwiIGgxXCIpO1xyXG4gICAgaWYgKGJhbm5lckhlYWRpbmcpIHtcclxuICAgICAgYmFubmVySGVhZGluZy50ZXh0Q29udGVudCA9IGJhbm5lckhlYWRpbmdUZXh0O1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChUZXN0SW5mby5WQVJJQVRJT04udG9TdHJpbmcoKSA9PT0gXCIxXCIpIHtcclxuICAgICAgY29uc3QgdjEgPSBuZXcgVk9uZUNvbXBvbmVudCgpO1xyXG4gICAgICB2MS5yZW5kZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoVGVzdEluZm8uVkFSSUFUSU9OLnRvU3RyaW5nKCkgPT09IFwiMlwiKSB7XHJcbiAgICAgIGNvbnN0IHYyID0gbmV3IFZUd29Db21wb25lbnQoKTtcclxuICAgICAgdjIucmVuZGVyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgU29jaWFsQ29tcG9uZW50LmFkZEV2ZW50TGlzdGVuZXIoKTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCB7IHB1Ymxpc2hlZERhdGUsIHB1Ymxpc2hlckxpbmssIHB1Ymxpc2hlck5hbWUgfSBmcm9tIFwiLi4vY29tbW9uL2Fzc2V0XCI7XHJcbmltcG9ydCB7IFRlc3RJbmZvIH0gZnJvbSBcIi4uL2NvbW1vbi90ZXN0LmluZm9cIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBQdWJsaXNoZXJDb21wb25lbnQge1xyXG4gIHN0YXRpYyByZW5kZXIgPSAoKTogc3RyaW5nID0+IHtcclxuICAgIGNvbnN0IGh0bWxTdHIgPSBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiJHtUZXN0SW5mby5JRH1fX3B1Ymxpc2hlZC1jb21wb25lbnRcIiA+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInB1Ymxpc2hlci1pbmZvXCIgPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHVibGlzaGVyLWltZ1wiID5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtwdWJsaXNoZXJMaW5rfVwiIGFsdD1cInB1Ymxpc2hlclwiID5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwdWJsaXNoZXItbmFtZVwiID5cclxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCIgPiR7cHVibGlzaGVyTmFtZX08L2E+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwdWJsaXNoZWQtZGF0ZVwiID5cclxuICAgICAgICAgICAgPHA+JHtwdWJsaXNoZWREYXRlfTwvcD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgYDtcclxuICAgIHJldHVybiBodG1sU3RyLnRyaW0oKTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCB7IHNvY2lhbFBvcFVwIH0gZnJvbSBcIi4uL2NvbW1vbi9hc3NldFwiO1xyXG5pbXBvcnQgeyBUZXN0SW5mbyB9IGZyb20gXCIuLi9jb21tb24vdGVzdC5pbmZvXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU29jaWFsQ29tcG9uZW50IHtcclxuICBzdGF0aWMgcmVuZGVyID0gKCk6IHN0cmluZyA9PiB7XHJcbiAgICByZXR1cm4gYFxyXG4gICAgPGRpdiBjbGFzcz1cIiR7VGVzdEluZm8uSUR9X19zb2NpYWwtY29tcG9uZW50XCI+XHJcbiAgICAgIDx1bCBjbGFzcz1cIlwiPlxyXG4gICAgICAgIDxsaT5cclxuICAgICAgICAgIDxhIGNsYXNzPVwiJHtUZXN0SW5mby5JRH1fX2ZhY2Vib29rXCIgdGl0bGU9XCJGYWNlYm9va1wiIGhyZWY9XCIjXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPVwiL2V0Yy5jbGllbnRsaWJzL2Jhc2UvY2xpZW50bGlicy9iYXNlLXJlc291cmNlcy9yZXNvdXJjZXMvaWNvbnMvc29jaWFsL2ZhY2Vib29rLWdyYXlzY2FsZS5zdmdcIiBhbHQ9XCJTaGFyZSB0byBGYWNlYm9va1wiPlxyXG4gICAgICAgICAgPC9hPlxyXG4gICAgICAgIDwvbGk+XHJcbiAgICAgICAgPGxpPlxyXG4gICAgICAgICAgPGEgY2xhc3M9XCIke1Rlc3RJbmZvLklEfV9fdHdpdHRlclwiIHRpdGxlPVwidHdpdHRlclwiIGhyZWY9XCIjXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPVwiL2V0Yy5jbGllbnRsaWJzL2Jhc2UvY2xpZW50bGlicy9iYXNlLXJlc291cmNlcy9yZXNvdXJjZXMvaWNvbnMvc29jaWFsL3R3aXR0ZXItZ3JheXNjYWxlLnN2Z1wiIGFsdD1cIlNoYXJlIHRvIFR3aXR0ZXJcIj5cclxuICAgICAgICAgIDwvYT5cclxuICAgICAgICA8L2xpPlxyXG4gICAgICAgIDxsaT5cclxuICAgICAgICAgIDxhIGNsYXNzPVwiJHtUZXN0SW5mby5JRH1fX2xpbmtlZGluXCIgdGl0bGU9XCJMaW5rZWRJblwiIGhyZWY9XCIjXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPVwiL2V0Yy5jbGllbnRsaWJzL2Jhc2UvY2xpZW50bGlicy9iYXNlLXJlc291cmNlcy9yZXNvdXJjZXMvaWNvbnMvc29jaWFsL2xpbmtlZGluLWdyYXlzY2FsZS5zdmdcIiBhbHQ9XCJTaGFyZSB0byBMaW5rZWRpblwiPlxyXG4gICAgICAgICAgPC9hPlxyXG4gICAgICAgIDwvbGk+XHJcbiAgICAgICAgPGxpPlxyXG4gICAgICAgICAgPGEgY2xhc3M9XCIke1Rlc3RJbmZvLklEfV9fc2hhcmVcIiB0aXRsZT1cInNoYXJlXCIgaHJlZj1cIiNcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9XCIvZXRjLmNsaWVudGxpYnMvYmFzZS9jbGllbnRsaWJzL2Jhc2UtcmVzb3VyY2VzL3Jlc291cmNlcy9pY29ucy9zb2NpYWwvYWRkdGhpc19zaGFyZS5zdmdcIiBhbHQ9XCJTaGFyZSB2aWEgQWRkVGhpc1wiPlxyXG4gICAgICAgICAgPC9hPlxyXG4gICAgICAgIDwvbGk+XHJcbiAgICAgIDwvdWw+XHJcbiAgICA8L2Rpdj5cclxuICAgIGA7XHJcbiAgfTtcclxuXHJcbiAgc3RhdGljIGFkZEV2ZW50TGlzdGVuZXIgPSAoKSA9PiB7XHJcbiAgICBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcImEuXCIgKyBUZXN0SW5mby5JRCArIFwiX19mYWNlYm9va1wiKVxyXG4gICAgICA/LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgLy8gY29uc3QgbWFpbkZhY2Vib29rRWxtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcjxIVE1MQW5jaG9yRWxlbWVudD4oXHJcbiAgICAgICAgLy8gICBcImEuYWRkdGhpc19idXR0b25fZmFjZWJvb2suYXQzMDBiXCJcclxuICAgICAgICAvLyApO1xyXG4gICAgICAgIC8vIG1haW5GYWNlYm9va0VsbSAmJiBtYWluRmFjZWJvb2tFbG0uY2xpY2soKTtcclxuICAgICAgICB0aGlzLnBvcFVwKHNvY2lhbFBvcFVwLmZhY2Vib29rLnVybCwgc29jaWFsUG9wVXAuZmFjZWJvb2submFtZSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiYS5cIiArIFRlc3RJbmZvLklEICsgXCJfX3R3aXR0ZXJcIilcclxuICAgICAgPy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIC8vIGNvbnN0IG1haW5GYWNlYm9va0VsbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTEFuY2hvckVsZW1lbnQ+KFxyXG4gICAgICAgIC8vICAgXCJhLmFkZHRoaXNfYnV0dG9uX3R3aXR0ZXIuYXQzMDBiXCJcclxuICAgICAgICAvLyApO1xyXG4gICAgICAgIC8vIG1haW5GYWNlYm9va0VsbSAmJiBtYWluRmFjZWJvb2tFbG0uY2xpY2soKTtcclxuXHJcbiAgICAgICAgdGhpcy5wb3BVcChzb2NpYWxQb3BVcC50d2l0dGVyLnVybCwgc29jaWFsUG9wVXAudHdpdHRlci5uYW1lKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCJhLlwiICsgVGVzdEluZm8uSUQgKyBcIl9fbGlua2VkaW5cIilcclxuICAgICAgPy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIC8vIGNvbnN0IG1haW5GYWNlYm9va0VsbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3I8SFRNTEFuY2hvckVsZW1lbnQ+KFxyXG4gICAgICAgIC8vICAgXCJhLmFkZHRoaXNfYnV0dG9uX2xpbmtlZGluLmF0MzAwYlwiXHJcbiAgICAgICAgLy8gKTtcclxuICAgICAgICAvLyBtYWluRmFjZWJvb2tFbG0gJiYgbWFpbkZhY2Vib29rRWxtLmNsaWNrKCk7XHJcbiAgICAgICAgdGhpcy5wb3BVcChzb2NpYWxQb3BVcC5saW5rZWRpbi51cmwsIHNvY2lhbFBvcFVwLmxpbmtlZGluLm5hbWUpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcImEuXCIgKyBUZXN0SW5mby5JRCArIFwiX19zaGFyZVwiKVxyXG4gICAgICA/LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbWFpbkZhY2Vib29rRWxtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcjxIVE1MQW5jaG9yRWxlbWVudD4oXHJcbiAgICAgICAgICBcImEuYWRkdGhpc19idXR0b25fY29tcGFjdC5hdDMwMG1cIlxyXG4gICAgICAgICk7XHJcbiAgICAgICAgbWFpbkZhY2Vib29rRWxtICYmIG1haW5GYWNlYm9va0VsbS5jbGljaygpO1xyXG4gICAgICB9KTtcclxuICB9O1xyXG5cclxuICBzdGF0aWMgcG9wVXAgPSAodXJsOiBzdHJpbmcsIHdpbmRvd05hbWU6IHN0cmluZykgPT4ge1xyXG4gICAgY29uc3QgbmV3V2luZG93OiBXaW5kb3cgfCBudWxsID0gd2luZG93Lm9wZW4oXHJcbiAgICAgIHVybCxcclxuICAgICAgd2luZG93TmFtZSxcclxuICAgICAgXCJoZWlnaHQ9NTAwLHdpZHRoPTUwMFwiXHJcbiAgICApO1xyXG4gICAgaWYgKG5ld1dpbmRvdykge1xyXG4gICAgICBuZXdXaW5kb3cuZm9jdXMoKTtcclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCB7IGFib3V0TGlua3MsIGJsb2dzLCBzZWN1cml0aWVzLCBzZWxlY3RvcnMgfSBmcm9tIFwiLi4vY29tbW9uL2Fzc2V0XCI7XHJcbmltcG9ydCB7IFRlc3RJbmZvIH0gZnJvbSBcIi4uL2NvbW1vbi90ZXN0LmluZm9cIjtcclxuaW1wb3J0IHsgQXJ0aWNsZUNvbXBvbmVudCB9IGZyb20gXCIuLi9jb21wb25lbnRzL2FydGljbGUuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IEJsb2dDb21wb25lbnQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9ibG9nLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBQdWJsaXNoZXJDb21wb25lbnQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9wdWJsaXNoZXIuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFNvY2lhbENvbXBvbmVudCB9IGZyb20gXCIuLi9jb21wb25lbnRzL3NvY2lhbC5jb21wb25lbnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBWT25lQ29tcG9uZW50IHtcclxuICBoaWRkZW5TZWN0aW9uU2VsZWN0b3IgPSBzZWxlY3RvcnMuaGlkZGVuU2VjdGlvblNlbGVjdG9yO1xyXG4gIGdldEh0bWwgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBodG1sID0gYFxyXG4gICAgPGRpdiBjbGFzcz1cIiR7VGVzdEluZm8uSUR9X19tYWluLWNvbXBvbmVudFwiID5cclxuICAgICAgICAke1NvY2lhbENvbXBvbmVudC5yZW5kZXIoKX1cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicHVibGlzaGVkLWFydGljbGUtYmxvZy1mb290ZXJcIiA+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwdWJsaXNoZWQtYXJ0aWNsZS1ibG9nXCIgPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInB1Ymxpc2hlZC1hcnRpY2xlXCIgPlxyXG4gICAgICAgICAgICAgICAgICAgICR7UHVibGlzaGVyQ29tcG9uZW50LnJlbmRlcigpfVxyXG4gICAgICAgICAgICAgICAgICAgICR7QXJ0aWNsZUNvbXBvbmVudC5yZW5kZXIoKX1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgJHtCbG9nQ29tcG9uZW50LnJlbmRlcihcIlJlbGF0ZWQgQmxvZ3NcIiwgYmxvZ3MsIGZhbHNlKX1cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCIke1Rlc3RJbmZvLklEfV9fZm9vdGVyXCIgPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb290ZXIgZm9vdGVyLWxlZnRcIiA+XHJcbiAgICAgICAgICAgICAgICAke0Jsb2dDb21wb25lbnQucmVuZGVyKFxyXG4gICAgICAgICAgICAgICAgICBcIkFkZGl0aW9uYWwgUmVzb3VyY2VzXCIsXHJcbiAgICAgICAgICAgICAgICAgIHNlY3VyaXRpZXMsXHJcbiAgICAgICAgICAgICAgICAgIHRydWVcclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvb3RlciBmb290ZXItcmlnaHRcIiA+XHJcbiAgICAgICAgICAgICAgICAke0Jsb2dDb21wb25lbnQucmVuZGVyKFxyXG4gICAgICAgICAgICAgICAgICBcIkFkZGl0aW9uYWwgUmVzb3VyY2VzXCIsXHJcbiAgICAgICAgICAgICAgICAgIGFib3V0TGlua3MsXHJcbiAgICAgICAgICAgICAgICAgIHRydWVcclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICBgO1xyXG4gICAgcmV0dXJuIGh0bWwudHJpbSgpO1xyXG4gIH07XHJcblxyXG4gIHJlbmRlciA9ICgpID0+IHtcclxuICAgIGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuaGlkZGVuU2VjdGlvblNlbGVjdG9yKVxyXG4gICAgICA/Lmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWJlZ2luXCIsIHRoaXMuZ2V0SHRtbCgpKTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCB7IGFib3V0TGlua3MsIGJsb2dzLCBzZWN1cml0aWVzLCBzZWxlY3RvcnMgfSBmcm9tIFwiLi4vY29tbW9uL2Fzc2V0XCI7XHJcbmltcG9ydCB7IFRlc3RJbmZvIH0gZnJvbSBcIi4uL2NvbW1vbi90ZXN0LmluZm9cIjtcclxuaW1wb3J0IHsgQXJ0aWNsZUNvbXBvbmVudCB9IGZyb20gXCIuLi9jb21wb25lbnRzL2FydGljbGUuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IEJsb2dDb21wb25lbnQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9ibG9nLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBQdWJsaXNoZXJDb21wb25lbnQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9wdWJsaXNoZXIuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFNvY2lhbENvbXBvbmVudCB9IGZyb20gXCIuLi9jb21wb25lbnRzL3NvY2lhbC5jb21wb25lbnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBWVHdvQ29tcG9uZW50IHtcclxuICBoaWRkZW5TZWN0aW9uU2VsZWN0b3IgPSBzZWxlY3RvcnMuaGlkZGVuU2VjdGlvblNlbGVjdG9yO1xyXG4gIGdldEh0bWwgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBodG1sID0gYFxyXG4gICAgPGRpdiBjbGFzcz1cIiR7VGVzdEluZm8uSUR9X19tYWluLWNvbXBvbmVudFwiID5cclxuICAgICAgJHtTb2NpYWxDb21wb25lbnQucmVuZGVyKCl9XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJwdWJsaXNoZWQtYXJ0aWNsZS1ibG9nLWZvb3RlclwiID5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJwdWJsaXNoZWQtYXJ0aWNsZS1ibG9nXCIgPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwdWJsaXNoZWQtYXJ0aWNsZVwiID5cclxuICAgICAgICAgICAgICAgICAgJHtQdWJsaXNoZXJDb21wb25lbnQucmVuZGVyKCl9XHJcbiAgICAgICAgICAgICAgICAgICR7QXJ0aWNsZUNvbXBvbmVudC5yZW5kZXIoKX1cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAke0Jsb2dDb21wb25lbnQucmVuZGVyKFwiUmVsYXRlZCBCbG9nc1wiLCBibG9ncywgdHJ1ZSl9XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCIke1Rlc3RJbmZvLklEfV9fZm9vdGVyXCIgPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9vdGVyIGZvb3Rlci1sZWZ0XCIgPlxyXG4gICAgICAgICAgICAgICR7QmxvZ0NvbXBvbmVudC5yZW5kZXIoXCJBZGRpdGlvbmFsIFJlc291cmNlc1wiLCBzZWN1cml0aWVzLCBmYWxzZSl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9vdGVyIGZvb3Rlci1yaWdodFwiID5cclxuICAgICAgICAgICAgICAke0Jsb2dDb21wb25lbnQucmVuZGVyKFwiQWRkaXRpb25hbCBSZXNvdXJjZXNcIiwgYWJvdXRMaW5rcywgZmFsc2UpfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgYDtcclxuICAgIHJldHVybiBodG1sLnRyaW0oKTtcclxuICB9O1xyXG5cclxuICByZW5kZXIgPSAoKSA9PiB7XHJcbiAgICBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLmhpZGRlblNlY3Rpb25TZWxlY3RvcilcclxuICAgICAgPy5pbnNlcnRBZGphY2VudEhUTUwoXCJhZnRlcmVuZFwiLCB0aGlzLmdldEh0bWwoKSk7XHJcbiAgfTtcclxufVxyXG4iLCJleHBvcnQgY2xhc3MgSW5pdGlhbGl6ZXIge1xyXG4gIHN0YXRpYyBpbml0ID0gKFxyXG4gICAgdGVzdEluZm86IHtcclxuICAgICAgSUQ6IHN0cmluZztcclxuICAgICAgU0lURTogc3RyaW5nO1xyXG4gICAgICBDTElFTlQ6IHN0cmluZztcclxuICAgICAgVkFSSUFUSU9OOiBzdHJpbmc7XHJcbiAgICB9LFxyXG4gICAgdmVyc2lvbjogc3RyaW5nXHJcbiAgKTogdm9pZCA9PiB7XHJcbiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0ZXN0SW5mby5JRCk7XHJcbiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcclxuICAgICAgYCR7dGVzdEluZm8uSUR9LSR7dGVzdEluZm8uVkFSSUFUSU9OfWBcclxuICAgICk7XHJcbiAgICBjb25zb2xlLmluZm8oXHJcbiAgICAgIGBJRDogJHt0ZXN0SW5mby5JRH0sIFZBUklBVElPTjogJHt0ZXN0SW5mby5WQVJJQVRJT059LCBWRVJTSU9OOiAke3ZlcnNpb259IGlzIHJ1bm5pbmcuLi4uLiFgXHJcbiAgICApO1xyXG4gIH07XHJcbn1cclxuIiwiaW1wb3J0IHsgVXNlck9wdGlvbnMgfSBmcm9tIFwiLi91c2VyLm9wdGlvbnNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBQb2xsZXIge1xyXG4gIHByaXZhdGUgb3B0aW9uczogVXNlck9wdGlvbnMgfCBudWxsID0gbnVsbDtcclxuICBwcml2YXRlIHRpbWVvdXQ6IG51bWJlciB8IG51bGwgPSBudWxsO1xyXG4gIHByaXZhdGUgc3VjY2Vzc2Z1bENvbmRpdGlvbnM6IGJvb2xlYW5bXSA9IFtdO1xyXG4gIHByaXZhdGUgY2FsbGJhY2s6IEZ1bmN0aW9uID0gKCkgPT4ge307XHJcbiAgcHJpdmF0ZSBjb25kaXRpb25zTGVuZ3RoOiBudW1iZXIgPSAwO1xyXG5cclxuICBwb2xsID0gKFxyXG4gICAgY29uZGl0aW9uczogKEZ1bmN0aW9uIHwgc3RyaW5nKVtdLFxyXG4gICAgY2FsbGJhY2s6IEZ1bmN0aW9uLFxyXG4gICAgdXNlck9wdGlvbnM/OiBVc2VyT3B0aW9uc1xyXG4gICkgPT4ge1xyXG4gICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xyXG4gICAgdGhpcy5vcHRpb25zID0gbmV3IFVzZXJPcHRpb25zKCk7XHJcbiAgICB0aGlzLmNvbmRpdGlvbnNMZW5ndGggPSBjb25kaXRpb25zLmxlbmd0aDtcclxuXHJcbiAgICBpZiAodXNlck9wdGlvbnMpIHtcclxuICAgICAgdGhpcy5vcHRpb25zID0gdXNlck9wdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy50aW1lb3V0ID0gdGhpcy5vcHRpb25zLnRpbWVvdXRcclxuICAgICAgPyBuZXcgRGF0ZSh0aGlzLmdldE5vdygpICsgdGhpcy5vcHRpb25zLnRpbWVvdXQpLmdldFRpbWUoKVxyXG4gICAgICA6IG51bGw7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb25kaXRpb25zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHRoaXMucG9sbEZvckNvbmRpdGlvbihcclxuICAgICAgICBjb25kaXRpb25zW2ldLFxyXG4gICAgICAgIHRoaXMub3B0aW9ucy53YWl0LFxyXG4gICAgICAgIHRydWUsXHJcbiAgICAgICAgdGhpcy5vcHRpb25zLm11bHRpcGxpZXJcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBnZXROb3cgPSAoKTogbnVtYmVyID0+IHtcclxuICAgIHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICB9O1xyXG5cclxuICBpc1RpbWVPdXQgPSAoKTogYm9vbGVhbiA9PiB7XHJcbiAgICBpZiAodGhpcy50aW1lb3V0ICYmIHRoaXMuZ2V0Tm93KCkgPiB0aGlzLnRpbWVvdXQpIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfTtcclxuXHJcbiAgZXZhbHVhdGVDb25kaXRpb24gPSAoY29uZGl0aW9uOiBGdW5jdGlvbiB8IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xyXG4gICAgaWYgKCFjb25kaXRpb24pIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0eXBlb2YgY29uZGl0aW9uID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgcmV0dXJuIGNvbmRpdGlvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0eXBlb2YgY29uZGl0aW9uID09PSBcInN0cmluZ1wiICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29uZGl0aW9uKSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfTtcclxuXHJcbiAgaXNBbGxDb25kaXRpb25QYXNzZWQgPSAoKTogYm9vbGVhbiA9PiB7XHJcbiAgICByZXR1cm4gdGhpcy5jb25kaXRpb25zTGVuZ3RoID09PSB0aGlzLnN1Y2Nlc3NmdWxDb25kaXRpb25zLmxlbmd0aDtcclxuICB9O1xyXG5cclxuICBwb2xsRm9yQ29uZGl0aW9uID0gKFxyXG4gICAgY29uZGl0aW9uOiBGdW5jdGlvbiB8IHN0cmluZyxcclxuICAgIHdhaXRUaW1lOiBudW1iZXIsXHJcbiAgICBza2lwV2FpdDogYm9vbGVhbixcclxuICAgIG11bHRpcGxpZXI6IG51bWJlclxyXG4gICk6IGJvb2xlYW4gPT4ge1xyXG4gICAgaWYgKHRoaXMudGltZW91dCAmJiB0aGlzLmlzVGltZU91dCgpKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmV2YWx1YXRlQ29uZGl0aW9uKGNvbmRpdGlvbik7XHJcblxyXG4gICAgaWYgKHJlc3VsdCkge1xyXG4gICAgICB0aGlzLnN1Y2Nlc3NmdWxDb25kaXRpb25zLnB1c2gocmVzdWx0KTtcclxuXHJcbiAgICAgIGlmICh0aGlzLmlzQWxsQ29uZGl0aW9uUGFzc2VkKCkpIHtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrKHRoaXMuc3VjY2Vzc2Z1bENvbmRpdGlvbnMpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBzZXRUaW1lb3V0KFxyXG4gICAgICAgICgpID0+IHtcclxuICAgICAgICAgIHRoaXMucG9sbEZvckNvbmRpdGlvbihcclxuICAgICAgICAgICAgY29uZGl0aW9uLFxyXG4gICAgICAgICAgICB3YWl0VGltZSAqIG11bHRpcGxpZXIsXHJcbiAgICAgICAgICAgIHNraXBXYWl0LFxyXG4gICAgICAgICAgICBtdWx0aXBsaWVyXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2tpcFdhaXQgPyAwIDogd2FpdFRpbWVcclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9O1xyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBVc2VyT3B0aW9ucyB7XHJcbiAgd2FpdDogbnVtYmVyID0gNTA7XHJcbiAgbXVsdGlwbGllcjogbnVtYmVyID0gMS4xO1xyXG4gIHRpbWVvdXQ6IG51bWJlciA9IDA7XHJcbn1cclxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsImltcG9ydCB7IFBvbGxlciB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlsaXRpZXMvcG9sbGVyXCI7XHJcbmltcG9ydCB7IHNlbGVjdG9ycyB9IGZyb20gXCIuL2NvbW1vbi9hc3NldFwiO1xyXG5pbXBvcnQgeyBNYWluQ29tcG9uZW50IH0gZnJvbSBcIi4vY29tcG9uZW50cy9tYWluLmNvbXBvbmVudFwiO1xyXG5cclxuY29uc3QgaWVDaGVja3MgPSAvTVNJRXxUcmlkZW50fEVkZ2VcXC8oMTJ8MTN8MTR8MTV8MTZ8MTd8MTgpLy50ZXN0KFxyXG4gIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50XHJcbik7XHJcblxyXG5pZiAoIWllQ2hlY2tzKSB7XHJcbiAgY29uc3QgbWFpbiA9IG5ldyBNYWluQ29tcG9uZW50KCk7XHJcbiAgY29uc3QgcG9sbGVyID0gbmV3IFBvbGxlcigpO1xyXG4gIHBvbGxlci5wb2xsKFxyXG4gICAgLy8gW1wiYm9keVwiLCBcImRpdiNwbGF0dGVyLTg2MzY2MjQxMFwiLCBcImRpdiNwbGF0dGVyLTE3ODMyMTM1NDFcIl0sXHJcbiAgICBbXCJib2R5XCIsIHNlbGVjdG9ycy5iYW5uZXJTZWxlY3Rvciwgc2VsZWN0b3JzLmhpZGRlblNlY3Rpb25TZWxlY3Rvcl0sXHJcbiAgICBtYWluLmluaXRcclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJkdW1teUNvbnRlbnQiLCJmYWNlYm9va1N2Z0xpbmsiLCJ0d2l0dGVyU3ZnTGluayIsImxpbmtlZGluU3ZnTGluayIsInNoYXJlU3ZnTGluayIsInB1Ymxpc2hlckxpbmsiLCJwdWJsaXNoZWREYXRlIiwicHVibGlzaGVyTmFtZSIsImFydGljbGVzIiwiYmxvZ3MiLCJocmVmIiwiaW1nU3JjIiwibGlua1RleHQiLCJ0aXRsZSIsInNlY3VyaXRpZXMiLCJhYm91dExpbmtzIiwicmlnaHRBcnJvdyIsImJhbm5lckhlYWRpbmdUZXh0Iiwic2VsZWN0b3JzIiwiYmFubmVyU2VsZWN0b3IiLCJoaWRkZW5TZWN0aW9uU2VsZWN0b3IiLCJzb2NpYWxQb3BVcCIsImZhY2Vib29rIiwidXJsIiwibmFtZSIsInR3aXR0ZXIiLCJsaW5rZWRpbiIsIlRlc3RJbmZvIiwicmVuZGVyIiwidGV4dCIsIklEIiwidHJpbSIsIkFydGljbGVJdGVtQ29tcG9uZW50IiwibWFwIiwiYSIsImpvaW4iLCJBcnRpY2xlQ29tcG9uZW50IiwiY2FyZE1vZGVsIiwib25seUxpbmsiLCJzaG93QmxvZ1RpdGxlIiwiVkFSSUFUSU9OIiwidG9TdHJpbmciLCJyZXBsYWNlIiwiQmxvZ0l0ZW1Db21wb25lbnQiLCJoZWFkbGluZSIsImJsb2ciLCJCbG9nQ29tcG9uZW50IiwiTWFpbkNvbXBvbmVudCIsImluaXQiLCJJbml0aWFsaXplciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNsYXNzTGlzdCIsImFkZCIsImJhbm5lckhlYWRpbmciLCJ0ZXh0Q29udGVudCIsIlZPbmVDb21wb25lbnQiLCJWVHdvQ29tcG9uZW50IiwiU29jaWFsQ29tcG9uZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIlB1Ymxpc2hlckNvbXBvbmVudCIsInBvcFVwIiwibWFpbkZhY2Vib29rRWxtIiwiY2xpY2siLCJ3aW5kb3dOYW1lIiwibmV3V2luZG93Iiwid2luZG93Iiwib3BlbiIsImZvY3VzIiwiZ2V0SHRtbCIsImluc2VydEFkamFjZW50SFRNTCIsInRlc3RJbmZvIiwidmVyc2lvbiIsImRvY3VtZW50RWxlbWVudCIsImNvbnNvbGUiLCJpbmZvIiwiUG9sbGVyIiwib3B0aW9ucyIsInRpbWVvdXQiLCJzdWNjZXNzZnVsQ29uZGl0aW9ucyIsImNhbGxiYWNrIiwiY29uZGl0aW9uc0xlbmd0aCIsInBvbGwiLCJjb25kaXRpb25zIiwidXNlck9wdGlvbnMiLCJVc2VyT3B0aW9ucyIsImxlbmd0aCIsIkRhdGUiLCJnZXROb3ciLCJnZXRUaW1lIiwiaSIsInBvbGxGb3JDb25kaXRpb24iLCJ3YWl0IiwibXVsdGlwbGllciIsImlzVGltZU91dCIsImV2YWx1YXRlQ29uZGl0aW9uIiwiY29uZGl0aW9uIiwiaXNBbGxDb25kaXRpb25QYXNzZWQiLCJ3YWl0VGltZSIsInNraXBXYWl0IiwicmVzdWx0IiwicHVzaCIsInNldFRpbWVvdXQiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJtYWluIl0sInNvdXJjZVJvb3QiOiIifQ==