(()=>{"use strict";var e={2:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.modalStatusKey=t.selectors=void 0,t.selectors={addToCartButton:"div#mobile-bill-breakdown button.btn-shop",continueButton:"div#mobile-bill-breakdown a.btn-shop",updateButton:"div#mobile-bill-breakdown button.btn-shop",placeHolderImg:"img.placeholder-image",modalCloseButton:"div.added-to-cart-modal button.cci-shopping-modal-close",modal:"div.added-to-cart-modal",shoppingPageContainer:"div#shopping-page-container",addDevice:"div.add-device>button",yourDevice:"div.your-device>button",reviewOrder:"div.review-order-button>a.btn-shop",overviewFieldError:"div#device-details-size-selection-error, div#device-details-payment-selection-error, div#device-details-color-selection-error, div#device-details-type-selection-error",overviewAddToCart:"div.device-details>div.hide-phone-up>button",bringYourDeviceConfigureAddToCart:"div.button-tray>button.config-add-to-cart",addDeviceDirect:"div.add-device-tile a",yourDeviceDirect:"ul.mobile-menu-list>li:nth-child(6)>a",shoppingBar:"span.shopping-bars"},t.modalStatusKey="mobile-add-device-model-open"},744:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TestInfo=void 0,(o=t.TestInfo||(t.TestInfo={})).ID="CC006",o.SITE="consumercellular",o.TITLE="6.9M.2 - “Add a device” vs. “Bring your own device” modal on mobile",o.CLIENT="brainlab",o.TARGET="https://www.consumercellular.com/shopping/choose/plan",o.VARIATION="control"},653:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainComponent=void 0;var n=o(951),i=o(2),r=o(744),s=o(76),c=o(430);t.MainComponent=function(){var e=this;this.addShopButtonsListener=function(e){var t=document.querySelectorAll("".concat(i.selectors.addToCartButton,", ").concat(i.selectors.continueButton,", ").concat(i.selectors.updateButton,", ").concat(i.selectors.reviewOrder));t&&t.length>0&&t.forEach((function(t){t.addEventListener("touchstart",(function(){localStorage.setItem(i.modalStatusKey,"true"),e?(console.log("review-order"),adobe.target.trackEvent({mbox:"review-order"})):(console.log("add-to-cart-or-continue-or-update"),adobe.target.trackEvent({mbox:"add-to-cart-or-continue-or-update"}))}))}))},this.addListenerForOverviewPage=function(){var e=document.querySelector(i.selectors.overviewAddToCart);e&&e.addEventListener("touchstart",(function(){e.classList.contains("disabled")||(console.log("overview-add-to-cart"),adobe.target.trackEvent({mbox:"overview-add-to-cart"}))}))},this.addListenerForBringYourDeviceConfigure=function(){var e=document.querySelector(i.selectors.bringYourDeviceConfigureAddToCart);e&&e.addEventListener("touchstart",(function(){e.classList.contains("disabled")||(console.log("bring-your-device-add-to-cart"),adobe.target.trackEvent({mbox:"bring-your-device-add-to-cart"}))}))},this.init=function(){new s.TestObserver(i.selectors.shoppingPageContainer).observe((function(t){for(var o=0;o<t.length;o++){var n=t[o].target,s=t[o].previousSibling;if(n.classList.contains("slide-enter-to")&&n.classList.contains("hide-phone-up")&&window.innerWidth<720&&"/shopping/choose/plan"===window.location.pathname){e.addShopButtonsListener(!1);break}if(n.classList.contains("plan-summary-component")&&"true"===localStorage.getItem(i.modalStatusKey)&&window.innerWidth<720&&"/shopping"===window.location.pathname&&"1"===r.TestInfo.VARIATION.toString()){(new c.ModalComponent).render();break}if(n.classList.contains("base-dollar-display-component")){e.addShopButtonsListener(!1);break}if(n.classList.contains("main-content")&&s&&s.classList&&s.classList.contains("input-component-frame")){e.addShopButtonsListener(!0);break}n.classList.contains("device-details")&&s&&s.classList&&s.classList.contains("reserve-device-modal")&&e.addListenerForOverviewPage(),n.classList.contains("accessory-grid-wrapper")&&s&&s.classList&&s.classList.contains("no-results")&&e.addListenerForBringYourDeviceConfigure()}}))},n.Initializer.init(r.TestInfo,"0.0.1")}},430:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ModalComponent=void 0;var n=o(2);t.ModalComponent=function(){var e=this;this.getHtml=function(){return'\n            <div class="added-to-cart-modal" style="z-index: 19002">\n                <div class="cci-modal-mask" style="">\n                    <div class="cci-modal-scroll-wrapper">\n                        <div class="cci-modal-wrapper">\n                            <div class="cci-modal-container">\n                                <button type="button" aria-label="Close" class="cci-shopping-modal-close btn btn-link"></button>\n                                <div class="cci-modal-header">\n                                    <h3></h3>\n                                </div>\n                                <div class="cci-modal-body">\n                                    <span aria-label="Check mark indicates selection has been made."\n                                        class="fa fa-check-circle white-bg circle-icon green"></span>\n                                    <span class="modal-title">Successfully Added To Cart</span>\n                                    <div class="row add-device">\n                                        <button href="/shopping/choose/device" class="btn btn-default next-step-button btn-shop">Add A Device</button>\n                                    </div>\n                                    <div class="row your-device">\n                                        <button href="/shopping/details/sim">Bring Your Own device</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        '.trim()},this.render=function(){var t=document.querySelector("body");if(t){t.insertAdjacentHTML("beforeend",e.getHtml()),localStorage.removeItem(n.modalStatusKey);var o=document.querySelector(n.selectors.modalCloseButton),i=document.querySelector(n.selectors.modal),r=document.querySelector(n.selectors.addDevice),s=document.querySelector(n.selectors.yourDevice),c=document.querySelector(n.selectors.addDeviceDirect),a=document.querySelector(n.selectors.yourDeviceDirect),d=document.querySelector(n.selectors.shoppingBar);o&&i&&r&&s&&c&&a&&d&&(o.addEventListener("click",(function(){i.remove()})),r.addEventListener("click",(function(){console.log("add-a-device"),adobe.target.trackEvent({mbox:"add-a-device"}),i.remove(),c.click()})),console.log("your-device-redirect=",a),s.addEventListener("click",(function(){console.log("bring-your-device"),adobe.target.trackEvent({mbox:"bring-your-device"}),i.remove(),a.click(),d.click()})))}}}},76:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TestObserver=void 0;t.TestObserver=function(e){var t=this;this.targetNode=null,this.config={},this.observe=function(e){new MutationObserver(e).observe(t.targetNode,t.config)},this.targetNode=document.querySelector(e),this.config={attributes:!0,childList:!0,subtree:!0,characterData:!0}}},951:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Initializer=void 0;var o=function(){function e(){}return e.init=function(e,t){document.documentElement.classList.add(e.ID),document.documentElement.classList.add("".concat(e.ID,"-").concat(e.VARIATION)),console.info("ID: ".concat(e.ID,", VARIATION: ").concat(e.VARIATION,", VERSION: ").concat(t," is running.....!"))},e}();t.Initializer=o},454:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Poller=void 0;var n=o(704);t.Poller=function(){var e=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(t,o,i){e.callback=o,e.options=new n.UserOptions,e.conditionsLength=t.length,i&&(e.options=i),e.timeout=e.options.timeout?new Date(e.getNow()+e.options.timeout).getTime():null;for(var r=0;r<t.length;r++)e.pollForCondition(t[r],e.options.wait,!0,e.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(e.timeout&&e.getNow()>e.timeout)},this.evaluateCondition=function(e){return!!e&&("function"==typeof e?e():!("string"!=typeof e||!document.querySelector(e)))},this.isAllConditionPassed=function(){return e.conditionsLength===e.successfulConditions.length},this.pollForCondition=function(t,o,n,i){if(e.timeout&&e.isTimeOut())return!1;var r=e.evaluateCondition(t);return r?(e.successfulConditions.push(r),e.isAllConditionPassed()&&e.callback(e.successfulConditions)):setTimeout((function(){e.pollForCondition(t,o*i,n,i)}),n?0:o),!0}}},704:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UserOptions=void 0;t.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},t={};function o(n){var i=t[n];if(void 0!==i)return i.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,o),r.exports}(()=>{var e=o(454),t=o(653);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var n=new t.MainComponent;(new e.Poller).poll(["body"],n.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,