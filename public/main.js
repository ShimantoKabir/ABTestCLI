(()=>{"use strict";var t={280:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.selectors=e.submitButtonText=e.formHeadlineText=void 0,e.formHeadlineText="Get on-demand access to the webinar now",e.submitButtonText="ACCESS WEBINAR NOW",e.selectors={formHeadlineSelector:"div.mktoHtmlText.mktoHasWidth > h3",submitButtonSelector:"button.mktoButton"}},245:(t,e)=>{var o;Object.defineProperty(e,"__esModule",{value:!0}),e.TestInfo=void 0,(o=e.TestInfo||(e.TestInfo={})).ID="F5006",o.SITE="f5",o.CLIENT="brainlab",o.TARGET="https://www.f5.com/company/events/webinars/api-discovery-inventory-and-security-webinar",o.VARIATION="1"},924:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MainComponent=void 0;var n=o(951),i=o(280),s=o(245);e.MainComponent=function(){this.init=function(){n.Initializer.init(s.TestInfo,"0.0.1"),n.Initializer.init(s.TestInfo,"0.0.1");var t=document.querySelector(i.selectors.formHeadlineSelector),e=document.querySelector(i.selectors.submitButtonSelector);t&&e&&(t.textContent=i.formHeadlineText,e.textContent=i.submitButtonText)}}},951:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Initializer=void 0;var o=function(){function t(){}return t.init=function(t,e){document.documentElement.classList.add(t.ID),document.documentElement.classList.add("".concat(t.ID,"-").concat(t.VARIATION)),console.info("ID: ".concat(t.ID,", VARIATION: ").concat(t.VARIATION,", VERSION: ").concat(e," is running.....!"))},t}();e.Initializer=o},454:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Poller=void 0;var n=o(704);e.Poller=function(){var t=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(e,o,i){t.callback=o,t.options=new n.UserOptions,t.conditionsLength=e.length,i&&(t.options=i),t.timeout=t.options.timeout?new Date(t.getNow()+t.options.timeout).getTime():null;for(var s=0;s<e.length;s++)t.pollForCondition(e[s],t.options.wait,!0,t.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(t.timeout&&t.getNow()>t.timeout)},this.evaluateCondition=function(t){return!!t&&("function"==typeof t?t():!("string"!=typeof t||!document.querySelector(t)))},this.isAllConditionPassed=function(){return t.conditionsLength===t.successfulConditions.length},this.pollForCondition=function(e,o,n,i){if(t.timeout&&t.isTimeOut())return!1;var s=t.evaluateCondition(e);return s?(t.successfulConditions.push(s),t.isAllConditionPassed()&&t.callback(t.successfulConditions)):setTimeout((function(){t.pollForCondition(e,o*i,n,i)}),n?0:o),!0}}},704:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UserOptions=void 0;e.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},e={};function o(n){var i=e[n];if(void 0!==i)return i.exports;var s=e[n]={exports:{}};return t[n](s,s.exports,o),s.exports}(()=>{var t=o(454),e=o(280),n=o(924);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var i=new n.MainComponent;(new t.Poller).poll(["body",e.selectors.formHeadlineSelector,e.selectors.submitButtonSelector],i.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,