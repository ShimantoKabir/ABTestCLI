(()=>{"use strict";var e={513:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.bannerHeadingText=t.rightArrow=t.aboutLinks=t.securities=t.blogs=t.articles=t.publisherName=t.publishedDate=t.publisherLink=t.shareSvgLink=t.linkedinSvgLink=t.twitterSvgLink=t.facebookSvgLink=t.dummyContent=void 0,t.dummyContent="Hello world!",t.facebookSvgLink="https://www.f5.com/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/facebook-grayscale.svg",t.twitterSvgLink="https://www.f5.com/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/twitter-grayscale.svg",t.linkedinSvgLink="https://www.f5.com/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/linkedin-grayscale.svg",t.shareSvgLink="https://www.f5.com/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/addthis_share.svg",t.publisherLink="https://www.f5.com/authors/dave-morrissey.thumb.png",t.publishedDate="Feb 08, 2023",t.publisherName="DAVE MORRISSEY",t.articles=["The recent <a class='blue-text' href='https://www.t-mobile.com/news/business/customer-information'>data breach disclosure by T-Mobile</a> highlights the challenges of the burgeoning “wild west” of application security—APIs. An individual (or group) was able to collect the personal data of over 30 million customers via use (or abuse) of an API, siphoning off information daily for over a month before detection.","At the time of writing this, not a lot of specifics are known about exactly how or why the API was abused in this case (e.g., abuse of function, broken object level authorization, excessive data exposure) or how the breach was finally realized. Just examining the numbers, on average, data from 902,000 customers was removed via this API per day without triggering any rate-limiting thresholds, time-series behavioral anomalies, etc. Or maybe they were, but not with the appropriate threat level to be quickly identified and have mitigation action taken by operations teams—it has the hallmarks of a low and slow attack.","Breaches like this give us the opportunity to think about how pervasive APIs are, how critical they are for organizations today, and the unique role they can play in the security (or insecurity) of any application and thus an entire organization. In an <a class='blue-text' href='https://www.f5.com/labs/articles/threat-intelligence/post-breach-analysis-sophistication-and-visibility' >analysis of breaches</a> in recent years, F5 Labs has noticed that in most scenarios where incidents are related to APIs, the breach method is technically very simple and impacts public-facing, poorly secured API endpoints.","Security, when it comes to APIs, is easier said than done (at least done well). With the wave of application security event data being generated for the growing number of applications and endpoints being monitored by most organizations these days, it feels like an impossible task to stay on top of everything.","However, there are three core elements that this attack highlights around API security specifically that organizations can all learn from in prioritizing technology and services that deliver:","API Visibility and Discovery. In this case, it’s not clear if this specific API was known or being actively monitored. Positive security, relying on securely developed and well-documented APIs with schema enforcement functionality, is critical but only half the equation. Chances are most organizations don’t have a handle on every API they have running in their environment, so being able to constantly learn and map APIs that aren’t already documented across all communication paths of an application is of the upmost importance. Discovery technology allows organizations to map their entire API landscape, exposing unknown/shadow APIs, abandoned or zombie APIs to block/remove, and any unknown “good” APIs that should be considered for governance, providing more comprehensive oversight.","Knowing an API exists and having access control capabilities are two critical pieces to the API security puzzle. In our <a class='blue-text' href='https://www.f5.com/state-of-application-strategy-report' >2022 State of Application Strategy Report</a>, 68% of respondents ranked authentication and authorization as the most valuable components of API security—followed not far behind by Behavioral Analysis and Anomaly Detection to monitor APIs, identifying and alerting on abnormal behavior and potential abuse, since there are many ways bad actors can easily bypass authentication and authorization. In this scenario, something about the data being passed between the API and the client must have been unusual. Being able to track API behavior over time once it is in production would generally include API request analysis and time series anomaly detection to build baseline behavioral attributes that would be used to identify anomalies in request rates, errors, latency, throughput, etc. With this functionality, an alerting element is critical to raise issues when unexpected spikes or drops occur, unique traffic patterns are present, or abnormal API requests are detected.","Rounding out a modern API security stack requires an In-Line Application and API Security Enforcement Engine, most likely including a WAF with multiple layers of application security functionality, such as granular L7 policy enforcement with Rate limiting, IP reputation, Allow/Deny list functionality, and L7 DoS with capabilities to further investigate and act on malicious endpoints, users, and other activity. This allows operations teams to quickly and easily identify suspected API abuse as anomalies are detected and create policies to stop that misuse, better protecting APIs and app endpoints over time as they evolve and behavior changes.","More is surely to come out as time passes and we learn about what exactly happened during this specific breach, but it is critical that organizations leverage these three elements to evaluate and better develop a plan to secure their apps and API endpoints from abuse like this.","Learn more about API Security Challenges and Tips for Modern AppDev and API Security","This <a class='black-text' href='https://www.f5.com/solutions/forrester-report-api-security-threats-and-solutions-b' >Forester “API Insecurity” Report</a> highlights the increasing challenges with modern app development and API security, delivering tips on implementing security as part of modern app and API development workflows."],t.blogs=[{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"F5 Celebrates Channel Ecosystem With Recognition of Key North America Partners",title:"BLOG"},{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"Kara Sprague, Executive Vice President and Chief Product Officer at F5 – Q&A",title:"BLOG"},{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"Rise of the Bots (Dan Woods Q&A Part 2)",title:"BLOG"},{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"Rise of the Bots (Dan Woods Q&A Part 2)",title:"BLOG"},{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"Rise of the Bots (Dan Woods Q&A Part 2)",title:"BLOG"}],t.securities=[{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"Mitigating Architectural Risk",title:"BLOG"},{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"Don’t Get Sacked by Cyberattacks This Super Bowl",title:"BLOG"},{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"The Top 10, Top 10 Predictions for 2023",title:"BLOG"}],t.aboutLinks=[{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"Meet F5’s Powerful Next-Generation F5OS Platforms",title:"BLOG"},{href:"#",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"F5 Announces General Availability of NGINXaaS for Azure",title:"BLOG"},{href:"#dummy",imgSrc:"https://www.f5.com/content/dam/f5-com/global-assets/resources-featurettes/dist-cloud-blog-feature_730x508.png",linkText:"F5 Announces General Availability of NGINXaaS for Azure",title:"BLOG"}],t.rightArrow='\n<svg width="15" height="15" viewBox="0 0 17 18" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M15.9766 8.99805L0.976562 8.99805" stroke="#0E6EB9" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />\n  <path d="M8.80859 16.498L15.9767 8.99805L8.80859 1.49805" stroke="#0E6EB9" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />\n</svg>\n',t.bannerHeadingText="Lessons Learned (So Far) from the T-Mobile Breach"},336:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TestInfo=void 0,(n=t.TestInfo||(t.TestInfo={})).ID="BL029",n.SITE="f5",n.CLIENT="brainlab",n.VARIATION="1"},698:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ArticleItemComponent=void 0;var o=n(336),i=function(){function e(){}return e.render=function(e){return'<p class="'.concat(o.TestInfo.ID,'__article-item-component" >').concat(e,"</p>").trim()},e}();t.ArticleItemComponent=i},442:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ArticleComponent=void 0;var o=n(513),i=n(336),a=n(698),s=function(){function e(){}return e.render=function(){return'\n    <div class="'.concat(i.TestInfo.ID,'__article-component" >\n      ').concat(o.articles.map((function(e){return a.ArticleItemComponent.render(e)})).join("\n"),"\n    </div>\n    ").trim()},e}();t.ArticleComponent=s},480:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BlogItemComponent=void 0;var o=n(513),i=n(336),a=function(){function e(){}return e.render=function(e,t){var n=!1;return"2"===i.TestInfo.VARIATION.toString()&&1==t&&(n=!0),"1"===i.TestInfo.VARIATION.toString()&&(n=!0),'\n    <div class="'.concat(i.TestInfo.ID,"__blog-item-component ").concat("#dummy"===e.href&&i.TestInfo.ID+"__hidden",'" >\n      <div class="blog-img ').concat(t&&i.TestInfo.ID+"__hide",'" >\n        <img src="').concat(e.imgSrc,'" alt="blog-img" />\n      </div>\n      <div class="blog-title ').concat(n&&i.TestInfo.ID+"__hide",'" > \n        <a href="').concat(e.href,'" >').concat(e.title,'</a>\n      </div>\n      <div class="blog-link" >\n        <a href="').concat(e.href,'" >').concat(e.linkText," ").concat(o.rightArrow,"</a>\n      </div>\n    </div>\n    ").trim()},e}();t.BlogItemComponent=a},697:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BlogComponent=void 0;var o=n(336),i=n(480),a=function(){function e(){}return e.render=function(e,t,n){return'\n    <div class="'.concat(o.TestInfo.ID,'__blog-component" >\n      <div class="blog-heading" >\n        <h4>').concat(e,'</h4>\n      </div>\n      <div class="blogs" >\n        ').concat(t.map((function(e){return i.BlogItemComponent.render(e,n)})).join("\n"),"\n      </div>\n    </div>\n    ").trim()},e}();t.BlogComponent=a},416:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainComponent=void 0;var o=n(951),i=n(513),a=n(336),s=n(577),r=n(639),c=n(883);t.MainComponent=function(){var e=this;this.hiddenSectionSelector="div#platter-863662410",this.bannerSelector="div#platter-1783213541",this.init=function(){var t;o.Initializer.init(a.TestInfo,"0.0.1"),null===(t=document.querySelector(e.hiddenSectionSelector))||void 0===t||t.classList.add(a.TestInfo.ID+"__hide");var n=document.querySelector(e.bannerSelector+" h1");n&&(n.textContent=i.bannerHeadingText),"1"===a.TestInfo.VARIATION.toString()&&(new s.VOneComponent).render(),"2"===a.TestInfo.VARIATION.toString()&&(new r.VTwoComponent).render(),c.SocialComponent.addEventListener()}}},286:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PublisherComponent=void 0;var o=n(513),i=n(336),a=function(){function e(){}return e.render=function(){return'\n    <div class="'.concat(i.TestInfo.ID,'__published-component" >\n        <div class="publisher-info" >\n            <div class="publisher-img" >\n                <img src="').concat(o.publisherLink,'" alt="publisher" >\n            </div>\n            <div class="publisher-name" >\n                <a href="#" >').concat(o.publisherName,'</a>\n            </div>\n        </div>\n        <div class="published-date" >\n            <p>').concat(o.publishedDate,"</p>\n        </div>\n    </div>\n    ").trim()},e}();t.PublisherComponent=a},883:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SocialComponent=void 0;var o=n(336),i=function(){function e(){}return e.render=function(){return'\n    <div class="'.concat(o.TestInfo.ID,'__social-component">\n      <ul class="">\n        <li>\n          <a class="').concat(o.TestInfo.ID,'__facebook" title="Facebook" href="#">\n            <img src="/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/facebook-grayscale.svg" alt="Share to Facebook">\n          </a>\n        </li>\n        <li>\n          <a class="').concat(o.TestInfo.ID,'__twitter" title="twitter" href="#">\n            <img src="/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/twitter-grayscale.svg" alt="Share to Twitter">\n          </a>\n        </li>\n        <li>\n          <a class="').concat(o.TestInfo.ID,'__linkedin" title="LinkedIn" href="#">\n            <img src="/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/linkedin-grayscale.svg" alt="Share to Linkedin">\n          </a>\n        </li>\n        <li>\n          <a class="').concat(o.TestInfo.ID,'__share" title="share" href="#">\n            <img src="/etc.clientlibs/base/clientlibs/base-resources/resources/icons/social/addthis_share.svg" alt="Share via AddThis">\n          </a>\n        </li>\n      </ul>\n    </div>\n    ')},e.addEventListener=function(){var e,t,n,i;null===(e=document.querySelector("a."+o.TestInfo.ID+"__facebook"))||void 0===e||e.addEventListener("click",(function(){var e=document.querySelector("a.addthis_button_facebook.at300b");e&&e.click()})),null===(t=document.querySelector("a."+o.TestInfo.ID+"__twitter"))||void 0===t||t.addEventListener("click",(function(){var e=document.querySelector("a.addthis_button_twitter.at300b");e&&e.click()})),null===(n=document.querySelector("a."+o.TestInfo.ID+"__linkedin"))||void 0===n||n.addEventListener("click",(function(){var e=document.querySelector("a.addthis_button_linkedin.at300b");e&&e.click()})),null===(i=document.querySelector("a."+o.TestInfo.ID+"__share"))||void 0===i||i.addEventListener("click",(function(){var e=document.querySelector("a.addthis_button_compact.at300m");e&&e.click()}))},e}();t.SocialComponent=i},577:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VOneComponent=void 0;var o=n(513),i=n(336),a=n(442),s=n(697),r=n(286),c=n(883);t.VOneComponent=function(){var e=this;this.hiddenSectionSelector="div#platter-863662410",this.getHtml=function(){return'\n    <div class="'.concat(i.TestInfo.ID,'__main-component" >\n        ').concat(c.SocialComponent.render(),'\n        <div class="published-article-blog-footer" >\n            <div class="published-article-blog" >\n                <div class="published-article" >\n                    ').concat(r.PublisherComponent.render(),"\n                    ").concat(a.ArticleComponent.render(),"\n                </div>\n                ").concat(s.BlogComponent.render("Related Blogs",o.blogs,!1),'\n            </div>\n            <div class="').concat(i.TestInfo.ID,'__footer" >\n              <div class="footer footer-left" >\n                ').concat(s.BlogComponent.render("More about API Security",o.securities,!0),'\n              </div>\n              <div class="footer footer-right" >\n                ').concat(s.BlogComponent.render("More about F5",o.aboutLinks,!0),"\n              </div>\n            </div>\n        </div>\n    </div>\n    ").trim()},this.render=function(){var t;null===(t=document.querySelector(e.hiddenSectionSelector))||void 0===t||t.insertAdjacentHTML("beforebegin",e.getHtml())}}},639:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VTwoComponent=void 0;var o=n(513),i=n(336),a=n(442),s=n(697),r=n(286),c=n(883);t.VTwoComponent=function(){var e=this;this.hiddenSectionSelector="div#platter-863662410",this.getHtml=function(){return'\n    <div class="'.concat(i.TestInfo.ID,'__main-component" >\n      ').concat(c.SocialComponent.render(),'\n      <div class="published-article-blog-footer" >\n          <div class="published-article-blog" >\n              <div class="published-article" >\n                  ').concat(r.PublisherComponent.render(),"\n                  ").concat(a.ArticleComponent.render(),"\n              </div>\n              ").concat(s.BlogComponent.render("Related Blogs",o.blogs,!0),'\n          </div>\n          <div class="').concat(i.TestInfo.ID,'__footer" >\n            <div class="footer footer-left" >\n              ').concat(s.BlogComponent.render("More about API Security",o.securities,!1),'\n            </div>\n            <div class="footer footer-right" >\n              ').concat(s.BlogComponent.render("More about F5",o.aboutLinks,!1),"\n            </div>\n          </div>\n      </div>\n    </div>\n    ").trim()},this.render=function(){var t;null===(t=document.querySelector(e.hiddenSectionSelector))||void 0===t||t.insertAdjacentHTML("afterend",e.getHtml())}}},951:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Initializer=void 0;var n=function(){function e(){}return e.init=function(e,t){document.documentElement.classList.add(e.ID),document.documentElement.classList.add("".concat(e.ID,"-").concat(e.VARIATION)),console.info("ID: ".concat(e.ID,", VARIATION: ").concat(e.VARIATION,", VERSION: ").concat(t," is running.....!"))},e}();t.Initializer=n},454:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Poller=void 0;var o=n(704);t.Poller=function(){var e=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(t,n,i){e.callback=n,e.options=new o.UserOptions,e.conditionsLength=t.length,i&&(e.options=i),e.timeout=e.options.timeout?new Date(e.getNow()+e.options.timeout).getTime():null;for(var a=0;a<t.length;a++)e.pollForCondition(t[a],e.options.wait,!0,e.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(e.timeout&&e.getNow()>e.timeout)},this.evaluateCondition=function(e){return!!e&&("function"==typeof e?e():!("string"!=typeof e||!document.querySelector(e)))},this.isAllConditionPassed=function(){return e.conditionsLength===e.successfulConditions.length},this.pollForCondition=function(t,n,o,i){if(e.timeout&&e.isTimeOut())return!1;var a=e.evaluateCondition(t);return a?(e.successfulConditions.push(a),e.isAllConditionPassed()&&e.callback(e.successfulConditions)):setTimeout((function(){e.pollForCondition(t,n*i,o,i)}),o?0:n),!0}}},704:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UserOptions=void 0;t.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,n),a.exports}(()=>{var e=n(454),t=n(416);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var o=new t.MainComponent;(new e.Poller).poll(["body","div#platter-863662410","div#platter-1783213541"],o.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,