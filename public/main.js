(()=>{"use strict";var e={661:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.arrowIcon=t.selectors=void 0,t.selectors={provideSection:"div.wp-container-6"},t.arrowIcon='\n<svg width="25" height="12" viewBox="0 0 25 12" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path fill-rule="evenodd" clip-rule="evenodd" d="M24.3531 2.31819L13.9353 10.9602C13.296 11.4905 12.2595 11.4905 11.6202 10.9602L1.2024 2.31819C0.56311 1.78787 0.56311 0.928058 1.2024 0.397739C1.84169 -0.13258 2.87818 -0.13258 3.51746 0.397739L12.7777 8.07955L22.038 0.397739C22.6773 -0.13258 23.7138 -0.13258 24.3531 0.397739C24.9923 0.928058 24.9923 1.78787 24.3531 2.31819Z" fill="white" />\n</svg>\n'},751:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TestInfo=void 0,(n=t.TestInfo||(t.TestInfo={})).ID="HT007",n.SITE="haletrailer",n.TITLE="4.1 service details Accordion vs. open list column",n.CLIENT="brainlab",n.TARGET="https://haletrailer.com/services/",n.VARIATION="1"},47:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AccordionComponent=void 0;var i=n(661);t.AccordionComponent=function(){var e=this;this.getLinkItemHtml=function(e){return'\n      <div class="link-item">\n        <div class="round"></div>\n        <div class="link">\n          <a class="accordion-link" href="#" >'.concat(e,"</a>\n        </div>\n      </div>\n    ").trim()},this.getAccordionItemHtml=function(t,n){return'\n      <div class="accordion-item '.concat(0===n?"active":"",'" >\n        <div class="heading" >\n          <div class="text" >\n            <h2>').concat(t.headline,'</h2>\n          </div>\n          <div class="icon" >\n            ').concat(i.arrowIcon,'\n          </div>\n        </div>\n        <div class="body" >\n          <div class="link-container" >\n            ').concat(t.items.map((function(t){return e.getLinkItemHtml(t)})).join("\n"),"\n          </div>\n        </div>\n      </div>\n    ").trim()},this.getHtml=function(t){return'\n      <div class="accordion-container" >\n      '.concat(t.map((function(t,n){return e.getAccordionItemHtml(t,n)})).join("\n"),"\n      </div>\n    ").trim()},this.render=function(t){var n=document.querySelector(i.selectors.provideSection);n&&(n.classList.add("hide"),n.insertAdjacentHTML("afterend",e.getHtml(t)),e.reactive())},this.reactive=function(){var e=document.querySelectorAll("div.accordion-container>div.accordion-item>div.heading");e&&0!==e.length&&e.forEach((function(e){e.addEventListener("click",(function(){e.parentElement&&e.parentElement.classList.toggle("active")}))}))}}},187:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainComponent=void 0;var i=n(951),o=n(751),c=n(875),r=n(47);t.MainComponent=function(){var e=this;this.mainService=new c.MainService,this.services=[],this.accordionComponent=new r.AccordionComponent,this.init=function(){e.services=e.mainService.collectData(),e.accordionComponent.render(e.services)},i.Initializer.init(o.TestInfo,"0.0.1")}},491:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Service=void 0;t.Service=function(){this.headline="",this.items=[]}},875:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainService=void 0;var i=n(661),o=n(491);t.MainService=function(){var e=this;this.services=[],this.collectData=function(){var t=document.querySelector(i.selectors.provideSection);return t?(t.childNodes.forEach((function(t){if(1===t.nodeType){var n=t;e.getItemData(n)}})),e.services):[]},this.getItemData=function(t){var n=new o.Service,i=t.querySelector("h3"),c=t.querySelectorAll("li");if(!i||!i.textContent||!c||0===c.length)return null;n.headline=i.textContent.split("/").join(" / "),n.items=e.getItemListDate(c),e.services.push(n)},this.getItemListDate=function(e){var t=[];return e.forEach((function(e){e.textContent&&t.push(e.textContent)})),t}}},951:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Initializer=void 0;var n=function(){function e(){}return e.init=function(e,t){document.documentElement.classList.add(e.ID),document.documentElement.classList.add("".concat(e.ID,"-").concat(e.VARIATION)),console.info("ID: ".concat(e.ID,", VARIATION: ").concat(e.VARIATION,", VERSION: ").concat(t," is running.....!"))},e}();t.Initializer=n},454:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Poller=void 0;var i=n(704);t.Poller=function(){var e=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(t,n,o){e.callback=n,e.options=new i.UserOptions,e.conditionsLength=t.length,o&&(e.options=o),e.timeout=e.options.timeout?new Date(e.getNow()+e.options.timeout).getTime():null;for(var c=0;c<t.length;c++)e.pollForCondition(t[c],e.options.wait,!0,e.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(e.timeout&&e.getNow()>e.timeout)},this.evaluateCondition=function(e){return!!e&&("function"==typeof e?e():!("string"!=typeof e||!document.querySelector(e)))},this.isAllConditionPassed=function(){return e.conditionsLength===e.successfulConditions.length},this.pollForCondition=function(t,n,i,o){if(e.timeout&&e.isTimeOut())return!1;var c=e.evaluateCondition(t);return c?(e.successfulConditions.push(c),e.isAllConditionPassed()&&e.callback(e.successfulConditions)):setTimeout((function(){e.pollForCondition(t,n*o,i,o)}),i?0:n),!0}}},704:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UserOptions=void 0;t.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},t={};function n(i){var o=t[i];if(void 0!==o)return o.exports;var c=t[i]={exports:{}};return e[i](c,c.exports,n),c.exports}(()=>{var e=n(454),t=n(661),i=n(187);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var o=new i.MainComponent;(new e.Poller).poll(["body",t.selectors.provideSection],o.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,