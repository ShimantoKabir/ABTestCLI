(()=>{"use strict";var e={353:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.mboxNames=t.rightArrowSvg=t.breadcrumbs=t.pageData=t.selectors=void 0,t.selectors={shoppingPageContainer:"div#shopping-page-container",checkoutWrapper:"div#checkout-wrapper",checkoutSections:"div#checkout-sections-column>div",placeOrderButtons:"div.submit-section>button",nextButtons:"div.next-button-component>button",checkoutNthSection:"div#checkout-sections-column>div:nth-child",breadcrumbItems:"div.breadcrumb-component-wrap>div",baseComponent:"div.base-affix-component",oldSaveCard:"div.base-affix-component>div>div>h4",newSaveCard:"div.checkout-header>div.left>h4",errors:"form.billing-info>div:nth-child(4), div.shipping-info-component>div:nth-child(4), form.payment-info>div.error"},t.pageData={checkoutPage:{checkoutTargetClassList:["plan-summary-component","col-md-6"],planSummarySiblingClassList:["base-plan-summary-component"]}},t.breadcrumbs=[{text:"CUSTOMER INFORMATION"},{text:"BILLING INFORMATION"},{text:"SHIPPING INFORMATION"},{text:"OTHER INFORMATION"},{text:"PAYMENT INFORMATION"}],t.rightArrowSvg='\n<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="chevron-right" class="svg-inline--fa fa-chevron-right fa-xs chakra-icon css-13otjrl" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">\n  <path fill="currentColor" d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z"></path>\n</svg>\n',t.mboxNames={breadcrumbClick:"breadcrumb-click",nextClick:"next-click",placeOrderClick:"place-order-click"}},395:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TestInfo=void 0,(n=t.TestInfo||(t.TestInfo={})).ID="CC009",n.SITE="consumercellular",n.TITLE="Consumer Cellular multi step form",n.CLIENT="brainlab",n.TARGET="https://www.consumercellular.com/shopping/checkout",n.VARIATION="1"},340:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BreadcrumbComponent=void 0;var r=n(353);t.BreadcrumbComponent=function(){var e=this;this.getBreadcrumbItem=function(e,t){return'\n      <div class="breadcrumb-item '.concat(0===t?"breadcrumb-item-active":"",'" >\n        <div class="text" >\n          <h3>').concat(e,'</h3>\n        </div>\n        <div class="icon" >\n          ').concat(r.rightArrowSvg,"\n        </div>\n      </div>\n    ").trim()},this.getHeader=function(){return'\n      <div class="checkout-header" >\n        <div class="right" >\n          <h2>Checkout</h2>\n        </div>\n        <div class="left" >\n          <h4>Save Cart</h4>\n        </div>\n      </div>\n    '.trim()},this.getHtml=function(){return'\n      <div class="breadcrumb-component" >\n        '.concat(e.getHeader(),' \n        <div class="breadcrumb-component-wrap">\n        ').concat(r.breadcrumbs.map((function(t,n){return e.getBreadcrumbItem(t.text,n)})).join("\n"),"\n        </div>\n      </div>\n    ")},this.render=function(){if(window.innerWidth<960){var t=document.querySelector(r.selectors.baseComponent);t&&t.insertAdjacentHTML("afterend",e.getHtml())}else{var n=document.querySelector(r.selectors.checkoutWrapper);n&&n.insertAdjacentHTML("afterbegin",e.getHtml());var o=document.querySelector(r.selectors.newSaveCard),i=document.querySelector(r.selectors.oldSaveCard);o&&i&&o.addEventListener("click",(function(){i.click()}))}}}},505:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainComponent=void 0;var r=n(951),o=n(353),i=n(395),c=n(482),a=n(925),s=n(340),u=n(727);t.MainComponent=function(){var e=this;this.isCCIDFound=!1,this.init=function(){c.LocationObserver.listen((function(){e.isCCIDFound=!1})),new a.TestObserver(o.selectors.shoppingPageContainer).observe((function(t){for(var n=0;n<t.length;n++){var r=t[n].target;r&&r.id&&"ccCCID"===r.id&&!1===e.isCCIDFound&&((new s.BreadcrumbComponent).render(),(new u.NextButtonComponent).render(),e.isCCIDFound=!0)}}))},r.Initializer.init(i.TestInfo,"0.0.1")}},727:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NextButtonComponent=void 0;var r=n(353),o=n(251);t.NextButtonComponent=function(){var e=this;this.getHtml=function(){return'\n      <div class="next-button-component" ><button>Next <i class="fa fa-angle-right"></i></button></div>\n    '.trim()},this.render=function(){var t=document.querySelectorAll(r.selectors.checkoutSections);if(t&&0!==t.length){t.forEach((function(t,n){0===n&&t.firstElementChild&&t.firstElementChild.classList.add("card-active"),t.insertAdjacentHTML("beforeend",e.getHtml())}));var n=new o.ServiceComponent;n.addNextButtonListener(t),n.addListenerToBreadcrumb(t),n.checkExtraError(t),n.addPlaceOrderButtonListener()}}}},251:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ServiceComponent=void 0;var r=n(353);t.ServiceComponent=function(){var e=this;this.submitPlaceOrder=function(){return new Promise((function(t,n){var r=e.getPlaceOrderButton();r&&0!==r.length&&r.forEach((function(e){e.click(),setTimeout((function(){t(!0)}),10)}))}))},this.getPlaceOrderButton=function(){return document.querySelectorAll(r.selectors.placeOrderButtons)},this.getCart=function(e,t){return e[t].querySelector("div.card")},this.addNextButtonListener=function(t){var n=document.querySelectorAll(r.selectors.nextButtons);n&&0!==n.length&&n.forEach((function(n,o){n.addEventListener("click",(function(){e.submitPlaceOrder().then((function(n){if(console.log("nex-mbox-click=",r.mboxNames.nextClick),adobe.target.trackEvent({mbox:r.mboxNames.nextClick}),e.checkExtraError(t),null===e.findNthSectionInputError(t[o])){var i=e.getCart(t,o);i&&i.classList&&i.classList.add("card-done"),i&&i.classList&&i.classList.remove("card-active");var c=e.getCart(t,o+1);c&&c.classList.add("card-active"),e.manageNextBreadcrumbActive(o)}}))}))}))},this.manageNextBreadcrumbActive=function(e){var t="".concat(r.selectors.breadcrumbItems,":nth-child(").concat(e+1,")"),n=document.querySelector(t);n&&n.nextElementSibling&&(n.classList.remove("breadcrumb-item-active"),n.nextElementSibling.classList.add("breadcrumb-item-active"))},this.findNthSectionInputError=function(e){for(var t=e.querySelectorAll("input"),n=null,r=0;r<t.length;r++)if(t[r].classList.contains("error-border")){n=r;break}return n},this.addListenerToBreadcrumb=function(t){var n=document.querySelectorAll(r.selectors.breadcrumbItems);n&&0!==n.length&&n.forEach((function(o,i){o.addEventListener("click",(function(){console.log("breadcrumb-mbox-click=",r.mboxNames.breadcrumbClick),adobe.target.trackEvent({mbox:r.mboxNames.breadcrumbClick}),e.manageCurrentBreadcrumbActive(n,i),e.manageCurrentCardActive(t,i)}))}))},this.manageCurrentCardActive=function(t,n){t.forEach((function(r,o){var i=e.getCart(t,o);o===n?i&&i.classList.add("card-active"):i&&i.classList.remove("card-active")}))},this.manageCurrentBreadcrumbActive=function(e,t){e.forEach((function(e,n){n===t?e.classList.add("breadcrumb-item-active"):e.classList.remove("breadcrumb-item-active")}))},this.manageError=function(t,n,r,o,i){if(t||n!==r){if(t&&n===r){var c;(c=e.getCart(i,o))&&c.classList.remove("card-error")}}else(c=e.getCart(i,o))&&c.classList.add("card-error")},this.checkExtraError=function(t){document.querySelectorAll(r.selectors.errors).forEach((function(n,r){var o=n.getAttribute("style");e.manageError(o,r,0,1,t),e.manageError(o,r,1,2,t),e.manageError(o,r,2,4,t)}))},this.addPlaceOrderButtonListener=function(){var t=e.getPlaceOrderButton();t&&0!==t.length&&t.forEach((function(e){e.addEventListener("click",(function(){console.log("place-order-mbox-click=",r.mboxNames.placeOrderClick),adobe.target.trackEvent({mbox:r.mboxNames.placeOrderClick})}))}))}}},482:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LocationObserver=void 0;var r=n(925),o=function(){function e(){}var t;return t=e,e.previousUrl="",e.listen=function(e){new r.TestObserver("body").observe((function(n){location.href!==t.previousUrl&&(t.previousUrl=location.href,e())}))},e}();t.LocationObserver=o},925:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TestObserver=void 0;t.TestObserver=function(e){var t=this;this.targetNode=null,this.config={},this.observe=function(e){var n=new MutationObserver(e);return n.observe(t.targetNode,t.config),n},this.targetNode=document.querySelector(e),this.config={attributes:!0,childList:!0,subtree:!0,characterData:!0}}},951:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Initializer=void 0;var n=function(){function e(){}return e.init=function(e,t){document.documentElement.classList.add(e.ID),document.documentElement.classList.add("".concat(e.ID,"-").concat(e.VARIATION)),console.info("ID: ".concat(e.ID,", VARIATION: ").concat(e.VARIATION,", VERSION: ").concat(t," is running.....!"))},e}();t.Initializer=n},454:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Poller=void 0;var r=n(704);t.Poller=function(){var e=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(t,n,o){e.callback=n,e.options=new r.UserOptions,e.conditionsLength=t.length,o&&(e.options=o),e.timeout=e.options.timeout?new Date(e.getNow()+e.options.timeout).getTime():null;for(var i=0;i<t.length;i++)e.pollForCondition(t[i],e.options.wait,!0,e.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(e.timeout&&e.getNow()>e.timeout)},this.evaluateCondition=function(e){return!!e&&("function"==typeof e?e():!("string"!=typeof e||!document.querySelector(e)))},this.isAllConditionPassed=function(){return e.conditionsLength===e.successfulConditions.length},this.pollForCondition=function(t,n,r,o){if(e.timeout&&e.isTimeOut())return!1;var i=e.evaluateCondition(t);return i?(e.successfulConditions.push(i),e.isAllConditionPassed()&&e.callback(e.successfulConditions)):setTimeout((function(){e.pollForCondition(t,n*o,r,o)}),r?0:n),!0}}},704:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UserOptions=void 0;t.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}(()=>{var e=n(454),t=n(505);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var r=new t.MainComponent;(new e.Poller).poll(["body"],r.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,