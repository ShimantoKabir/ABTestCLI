(()=>{"use strict";var e={106:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.pageData=t.mboxNames=t.selectors=void 0,t.selectors={shoppingPageContainer:"div#shopping-page-container",tiles:"div.placeholder-device-tile",addDeviceDirect:"div.add-device-tile a",yourDeviceDirect:"ul.mobile-menu-list>li:nth-child(6)>a",shopPhone:"shop-phone",yourPhone:"your-phone"},t.mboxNames={shopPhone:"mbox-shop-phone",yourPhone:"mbox-your-phone"},t.pageData={shoppingPage:{planSummaryTargetClassList:["plan-summary-component","col-md-6"],planSummarySiblingClassList:["base-plan-summary-component"],mobilePostTargetId:"save-cart-zip-code",mobilePostAttributeName:"data-previous-value"}}},480:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TestInfo=void 0,(n=t.TestInfo||(t.TestInfo={})).ID="CC008",n.SITE="consumercellular",n.TITLE="8.2 Quick Add “Bring Your Own” on Cart",n.CLIENT="brainlab",n.TARGET="https://www.consumercellular.com/shopping",n.VARIATION="1"},986:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainComponent=void 0;var o=n(951),i=n(106),s=n(480),r=n(972),a=n(341);t.MainComponent=function(){var e=this;this.addNewTile=function(){(new a.TileComponent).render()},this.init=function(){new r.TestObserver(i.selectors.shoppingPageContainer).observe((function(t){for(var n=0;n<t.length;n++){var o=t[n],s=o.target;if(o.previousSibling,s&&s.classList&&s.classList.contains(i.pageData.shoppingPage.planSummaryTargetClassList[0])&&s.classList.contains(i.pageData.shoppingPage.planSummaryTargetClassList[1])){e.addNewTile();break}if(s&&s.id&&s.id===i.pageData.shoppingPage.mobilePostTargetId&&o.attributeName&&o.attributeName===i.pageData.shoppingPage.mobilePostAttributeName){e.addNewTile();break}}}))},o.Initializer.init(s.TestInfo,"0.0.1")}},341:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TileComponent=void 0;var o=n(106);t.TileComponent=function(){var e=this;this.getHtml=function(){return'\n      <div class="tile-component">\n        <div class="'.concat(o.selectors.shopPhone,' phone">\n          <div class="phone-img">\n            <img src="https://medianet.com/cro/consumercellular/cc008/v1/shop-phone.png">\n          </div>\n          <div class="phone-text">\n            <p>SHOP PHONES & DEVICES</p>\n          </div>\n        </div>\n        <div class="').concat(o.selectors.yourPhone,' phone">\n          <div class="phone-img">\n            <img src="https://medianet.com/cro/consumercellular/cc008/v1/own-phone.png">\n            <p>FREE</p>\n          </div>\n          <div class="phone-text">\n            <p>BRING YOUR OWN</p>\n          </div>\n        </div>\n      </div>\n    ').trim()},this.render=function(){var t=document.querySelectorAll(o.selectors.tiles),n=document.querySelector(o.selectors.addDeviceDirect),i=document.querySelector(o.selectors.yourDeviceDirect);if(t&&0!==t.length&&n&&i){t.forEach((function(t){t.insertAdjacentHTML("beforeend",e.getHtml())}));var s=document.querySelectorAll("div."+o.selectors.shopPhone);s&&s.length>0&&s.forEach((function(e){e.addEventListener("click",(function(){adobe.target.trackEvent({mbox:o.mboxNames.shopPhone}),n.click()}))}));var r=document.querySelectorAll("div."+o.selectors.yourPhone);r&&r.length>0&&r.forEach((function(e){e.addEventListener("click",(function(){adobe.target.trackEvent({mbox:o.mboxNames.yourPhone}),i.click()}))}))}}}},972:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TestObserver=void 0;t.TestObserver=function(e){var t=this;this.targetNode=null,this.config={},this.observe=function(e){var n=new MutationObserver(e);return n.observe(t.targetNode,t.config),n},this.targetNode=document.querySelector(e),this.config={attributes:!0,childList:!0,subtree:!0,characterData:!0}}},951:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Initializer=void 0;var n=function(){function e(){}return e.init=function(e,t){document.documentElement.classList.add(e.ID),document.documentElement.classList.add("".concat(e.ID,"-").concat(e.VARIATION)),console.info("ID: ".concat(e.ID,", VARIATION: ").concat(e.VARIATION,", VERSION: ").concat(t," is running.....!"))},e}();t.Initializer=n},454:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Poller=void 0;var o=n(704);t.Poller=function(){var e=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(t,n,i){e.callback=n,e.options=new o.UserOptions,e.conditionsLength=t.length,i&&(e.options=i),e.timeout=e.options.timeout?new Date(e.getNow()+e.options.timeout).getTime():null;for(var s=0;s<t.length;s++)e.pollForCondition(t[s],e.options.wait,!0,e.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(e.timeout&&e.getNow()>e.timeout)},this.evaluateCondition=function(e){return!!e&&("function"==typeof e?e():!("string"!=typeof e||!document.querySelector(e)))},this.isAllConditionPassed=function(){return e.conditionsLength===e.successfulConditions.length},this.pollForCondition=function(t,n,o,i){if(e.timeout&&e.isTimeOut())return!1;var s=e.evaluateCondition(t);return s?(e.successfulConditions.push(s),e.isAllConditionPassed()&&e.callback(e.successfulConditions)):setTimeout((function(){e.pollForCondition(t,n*i,o,i)}),o?0:n),!0}}},704:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UserOptions=void 0;t.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,n),s.exports}(()=>{var e=n(454),t=n(986);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var o=new t.MainComponent;(new e.Poller).poll(["body"],o.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,