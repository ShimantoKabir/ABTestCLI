(()=>{"use strict";var e={283:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.modelHeaderSelector=t.helps=void 0,t.helps=[{text:"Help you explore options for financial aid for which you may qualify."},{text:"Highlight the program selection and scheduling options available to you."},{text:"Help plan how long your education will take to complete based on your specific situation."},{text:"Help you see how the chosen program will fit into your schedule."}],t.modelHeaderSelector="div.modal-header"},891:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TestInfo=void 0,(n=t.TestInfo||(t.TestInfo={})).ID="BL028",n.SITE="fortis",n.CLIENT="brainlab",n.VARIATION="1"},753:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ContactComponent=void 0;var o=n(283),i=n(891),r=n(29);t.ContactComponent=function(){this.render=function(){return'<div class="'.concat(i.TestInfo.ID,'__contact-container" >\n      <div class="headline" >\n        <h5>When we contact you we\'ll:</h5>\n      </div>  \n      <div class="text-content" >\n        <ul>\n          ').concat(o.helps.map((function(e){return r.LiComponent.render(e.text)})).join("\n"),"\n        </ul>\n      </div>\n    </div>").trim()}}},29:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LiComponent=void 0;var n=function(){function e(){}return e.render=function(e){return"<li>".concat(e,"</li>").trim()},e}();t.LiComponent=n},368:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainComponent=void 0;var o=n(951),i=n(283),r=n(891),l=n(753);t.MainComponent=function(){this.init=function(){var e;o.Initializer.init(r.TestInfo,"0.0.1");var t=document.querySelector(i.modelHeaderSelector+">p");t&&t.textContent&&(t.textContent=t.textContent.toUpperCase().toString());var n=new l.ContactComponent;null===(e=document.querySelector(i.modelHeaderSelector))||void 0===e||e.insertAdjacentHTML("afterend",n.render())}}},951:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Initializer=void 0;var n=function(){function e(){}return e.init=function(e,t){document.documentElement.classList.add(e.ID),document.documentElement.classList.add("".concat(e.ID,"-").concat(e.VARIATION)),console.info("ID: ".concat(e.ID,", VARIATION: ").concat(e.VARIATION,", VERSION: ").concat(t," is running.....!"))},e}();t.Initializer=n},454:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Poller=void 0;var o=n(704);t.Poller=function(){var e=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(t,n,i){e.callback=n,e.options=new o.UserOptions,e.conditionsLength=t.length,i&&(e.options=i),e.timeout=e.options.timeout?new Date(e.getNow()+e.options.timeout).getTime():null;for(var r=0;r<t.length;r++)e.pollForCondition(t[r],e.options.wait,!0,e.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(e.timeout&&e.getNow()>e.timeout)},this.evaluateCondition=function(e){return!!e&&("function"==typeof e?e():!("string"!=typeof e||!document.querySelector(e)))},this.isAllConditionPassed=function(){return e.conditionsLength===e.successfulConditions.length},this.pollForCondition=function(t,n,o,i){if(e.timeout&&e.isTimeOut())return!1;var r=e.evaluateCondition(t);return r?(e.successfulConditions.push(r),e.isAllConditionPassed()&&e.callback(e.successfulConditions)):setTimeout((function(){e.pollForCondition(t,n*i,o,i)}),o?0:n),!0}}},704:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UserOptions=void 0;t.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,n),r.exports}(()=>{var e=n(454),t=n(283),o=n(368);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var i=new o.MainComponent;(new e.Poller).poll(["body",t.modelHeaderSelector],i.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,