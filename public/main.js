(()=>{"use strict";var e={472:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.selector=t.bannerText=void 0,t.bannerText="In this eBook from O'Reilly Media, compliments of NGINX, learn how to implement a DevSecOps strategy by integrating security early into your development process through cloud infrastructure on AWS.",t.selector={fromSelector:"div.ebook-download-form",headingTextSelector:"div.headings-text",desktopBannerSelector:"div.banner-content.info-banner>div.hide-sm",heroBannerSelector:"div.hero-banner>div.inner-wrap>div.banner-content"}},924:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TestInfo=void 0,(n=t.TestInfo||(t.TestInfo={})).ID="BL031",n.SITE="nginx",n.CLIENT="brainlab",n.VARIATION="1"},101:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BannerTextComponent=void 0;var o=n(472),i=n(924),r=function(){function e(){}return e.render=function(){return'<div class="'.concat(i.TestInfo.ID,'__banner-text-container" ><p>').concat(o.bannerText,"</p></div>")},e}();t.BannerTextComponent=r},343:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainComponent=void 0;var o=n(951),i=n(472),r=n(924),l=n(101);t.MainComponent=function(){this.init=function(){var e,t,n,s,c;o.Initializer.init(r.TestInfo,"0.0.1"),null===(e=document.querySelector(i.selector.heroBannerSelector))||void 0===e||e.insertAdjacentHTML("afterend",l.BannerTextComponent.render()),null===(t=document.querySelector(i.selector.headingTextSelector))||void 0===t||t.classList.add("".concat(r.TestInfo.ID,"__hide"));var u=null===(n=document.querySelector(i.selector.fromSelector))||void 0===n?void 0:n.cloneNode(!0);null===(s=document.querySelector(i.selector.fromSelector))||void 0===s||s.remove(),u&&(null===(c=document.querySelector(i.selector.desktopBannerSelector))||void 0===c||c.insertAdjacentElement("beforeend",u))}}},951:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Initializer=void 0;var n=function(){function e(){}return e.init=function(e,t){document.documentElement.classList.add(e.ID),document.documentElement.classList.add("".concat(e.ID,"-").concat(e.VARIATION)),console.info("ID: ".concat(e.ID,", VARIATION: ").concat(e.VARIATION,", VERSION: ").concat(t," is running.....!"))},e}();t.Initializer=n},454:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Poller=void 0;var o=n(704);t.Poller=function(){var e=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(t,n,i){e.callback=n,e.options=new o.UserOptions,e.conditionsLength=t.length,i&&(e.options=i),e.timeout=e.options.timeout?new Date(e.getNow()+e.options.timeout).getTime():null;for(var r=0;r<t.length;r++)e.pollForCondition(t[r],e.options.wait,!0,e.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(e.timeout&&e.getNow()>e.timeout)},this.evaluateCondition=function(e){return!!e&&("function"==typeof e?e():!("string"!=typeof e||!document.querySelector(e)))},this.isAllConditionPassed=function(){return e.conditionsLength===e.successfulConditions.length},this.pollForCondition=function(t,n,o,i){if(e.timeout&&e.isTimeOut())return!1;var r=e.evaluateCondition(t);return r?(e.successfulConditions.push(r),e.isAllConditionPassed()&&e.callback(e.successfulConditions)):setTimeout((function(){e.pollForCondition(t,n*i,o,i)}),o?0:n),!0}}},704:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UserOptions=void 0;t.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,n),r.exports}(()=>{var e=n(454),t=n(472),o=n(343);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var i=new o.MainComponent;(new e.Poller).poll(["body",t.selector.desktopBannerSelector,t.selector.headingTextSelector,t.selector.fromSelector,t.selector.heroBannerSelector],i.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,