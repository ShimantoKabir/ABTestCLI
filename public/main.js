(()=>{"use strict";var t={447:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.mboxNames=e.helps=e.selectors=void 0,e.selectors={modelHeader:"div.modal-header",submitSection:"div.modal-content>div.submit"},e.helps=[{text:"When we contact you we’ll: Help you explore options for financial aid for which you may qualify."},{text:"Highlight the program selection and scheduling options available to you."},{text:"Help plan how long your education will take to complete based on your specific situation."},{text:"Help you see how the chosen program will fit into your schedule."},{text:"We’re available 7 days a week. We'll call you soon after submitting the form."}],e.mboxNames={submitButtonMbox:"submit-button-mbox"}},267:(t,e)=>{var n;Object.defineProperty(e,"__esModule",{value:!0}),e.TestInfo=void 0,(n=e.TestInfo||(e.TestInfo={})).ID="FR004",n.SITE="fortis",n.TITLE="BLTEST012: Contact form user expectations",n.CLIENT="brainlab",n.TARGET="https://www.fortis.edu/campuses/florida/cutler-bay/ignite/associate-degree-in-nursing.html",n.VARIATION="1"},956:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ContactComponent=void 0;var o=n(447),i=n(267),s=n(778);e.ContactComponent=function(){this.render=function(){return'<div class="'.concat(i.TestInfo.ID,'__contact-container" >\n      <div class="headline" >\n        <h5>When we contact you we\'ll:</h5>\n      </div>  \n      <div class="text-content" >\n        <ul>\n          ').concat(o.helps.map((function(t){return s.LiComponent.render(t.text)})).join("\n"),"\n        </ul>\n      </div>\n    </div>").trim()}}},778:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LiComponent=void 0;var n=function(){function t(){}return t.render=function(t){return"<li>".concat(t,"</li>").trim()},t}();e.LiComponent=n},347:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MainComponent=void 0;var o=n(951),i=n(447),s=n(267),r=n(956);e.MainComponent=function(){this.init=function(){var t=new r.ContactComponent,e=document.querySelector(i.selectors.submitSection),n=document.querySelector(i.selectors.modelHeader),o=document.querySelector(i.selectors.submitSection+">button");e&&n&&o&&("1"===s.TestInfo.VARIATION.toString()?n.insertAdjacentHTML("afterend",t.render()):e.insertAdjacentHTML("afterend",t.render()))},o.Initializer.init(s.TestInfo,"0.0.1")}},951:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Initializer=void 0;var n=function(){function t(){}return t.init=function(t,e){document.documentElement.classList.add(t.ID),document.documentElement.classList.add("".concat(t.ID,"-").concat(t.VARIATION)),console.info("ID: ".concat(t.ID,", VARIATION: ").concat(t.VARIATION,", VERSION: ").concat(e," is running.....!"))},t}();e.Initializer=n},454:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Poller=void 0;var o=n(704);e.Poller=function(){var t=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(e,n,i){t.callback=n,t.options=new o.UserOptions,t.conditionsLength=e.length,i&&(t.options=i),t.timeout=t.options.timeout?new Date(t.getNow()+t.options.timeout).getTime():null;for(var s=0;s<e.length;s++)t.pollForCondition(e[s],t.options.wait,!0,t.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(t.timeout&&t.getNow()>t.timeout)},this.evaluateCondition=function(t){return!!t&&("function"==typeof t?t():!("string"!=typeof t||!document.querySelector(t)))},this.isAllConditionPassed=function(){return t.conditionsLength===t.successfulConditions.length},this.pollForCondition=function(e,n,o,i){if(t.timeout&&t.isTimeOut())return!1;var s=t.evaluateCondition(e);return s?(t.successfulConditions.push(s),t.isAllConditionPassed()&&t.callback(t.successfulConditions)):setTimeout((function(){t.pollForCondition(e,n*i,o,i)}),o?0:n),!0}}},704:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UserOptions=void 0;e.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var s=e[o]={exports:{}};return t[o](s,s.exports,n),s.exports}(()=>{var t=n(454),e=n(447),o=n(347);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var i=new o.MainComponent;(new t.Poller).poll(["body",e.selectors.modelHeader,e.selectors.submitSection],i.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,