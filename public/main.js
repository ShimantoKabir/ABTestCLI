(()=>{"use strict";var t={651:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.selectors=void 0,e.selectors={untitledSection:"div.uk-container-large>div:first-child",container:"div.uk-container-large",aboutSection:"div.uk-container-large>div:last-child",contactSection:"div.uk-first-column>div>div.uk-padding"}},903:(t,e)=>{var n;Object.defineProperty(e,"__esModule",{value:!0}),e.TestInfo=void 0,(n=e.TestInfo||(e.TestInfo={})).ID="HT003",n.SITE="haletrailer",n.CLIENT="brainlab",n.VARIATION="1"},273:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ButtonComponent=void 0;var o=n(651);e.ButtonComponent=function(){var t=this;this.getHtml=function(){return'<div class="contact-us-button" ><a href="#support" >CONTACT US</a></div>'.trim()},this.render=function(){var e=document.querySelector(o.selectors.contactSection);console.log("contactSection=",e),e&&e.insertAdjacentHTML("beforeend",t.getHtml())}}},129:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MainComponent=void 0;var o=n(951),i=n(651),r=n(903),s=n(273);e.MainComponent=function(){this.init=function(){o.Initializer.init(r.TestInfo,"0.0.1");var t=document.querySelector(i.selectors.untitledSection),e=document.querySelector(i.selectors.aboutSection);if(t&&e){var n=t.cloneNode(!0);t.remove(),e.insertAdjacentElement("afterend",n)}(new s.ButtonComponent).render()}}},951:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Initializer=void 0;var n=function(){function t(){}return t.init=function(t,e){document.documentElement.classList.add(t.ID),document.documentElement.classList.add("".concat(t.ID,"-").concat(t.VARIATION)),console.info("ID: ".concat(t.ID,", VARIATION: ").concat(t.VARIATION,", VERSION: ").concat(e," is running.....!"))},t}();e.Initializer=n},454:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Poller=void 0;var o=n(704);e.Poller=function(){var t=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(e,n,i){t.callback=n,t.options=new o.UserOptions,t.conditionsLength=e.length,i&&(t.options=i),t.timeout=t.options.timeout?new Date(t.getNow()+t.options.timeout).getTime():null;for(var r=0;r<e.length;r++)t.pollForCondition(e[r],t.options.wait,!0,t.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(t.timeout&&t.getNow()>t.timeout)},this.evaluateCondition=function(t){return!!t&&("function"==typeof t?t():!("string"!=typeof t||!document.querySelector(t)))},this.isAllConditionPassed=function(){return t.conditionsLength===t.successfulConditions.length},this.pollForCondition=function(e,n,o,i){if(t.timeout&&t.isTimeOut())return!1;var r=t.evaluateCondition(e);return r?(t.successfulConditions.push(r),t.isAllConditionPassed()&&t.callback(t.successfulConditions)):setTimeout((function(){t.pollForCondition(e,n*i,o,i)}),o?0:n),!0}}},704:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UserOptions=void 0;e.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={exports:{}};return t[o](r,r.exports,n),r.exports}(()=>{var t=n(454),e=n(651),o=n(129);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var i=new o.MainComponent;(new t.Poller).poll(["body",e.selectors.container,e.selectors.untitledSection,e.selectors.aboutSection,e.selectors.contactSection],i.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,