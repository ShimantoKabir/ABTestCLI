(()=>{"use strict";var n={935:(n,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.triggerMetrics=i.plans=i.viewPlanLink=i.bringYourLink=i.shopPhoneLink=i.rightIconSvg=i.slideMobileBgUrl=i.selectors=void 0,i.selectors={firstSlide:"div.cmp-carousel div.slick-track>div:first-child",carousalSection:"main.chakra-container>div.aem-container>div:nth-child(1)",reviewSection:"main.chakra-container>div.aem-container>div:nth-child(2)",zipSearchSection:"main.chakra-container>div.aem-container>div:nth-child(5)"},i.slideMobileBgUrl="https://brainlabs.digital/cro/consumercellular/cc030/slide-mobile-bg.jpg",i.rightIconSvg='\n<svg width="24" height="19" viewBox="0 0 24 19" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <line x1="2.26777" y1="9.23223" x2="10.2678" y2="17.2322" stroke="#F26531" stroke-width="5" />\n  <line x1="6.73223" y1="17.2322" x2="21.7322" y2="2.23223" stroke="#F26531" stroke-width="5" />\n</svg>\n',i.shopPhoneLink=" https://www.consumercellular.com/shopping/choose/device",i.bringYourLink="https://www.consumercellular.com/shopping/details/sim/details",i.viewPlanLink="https://www.consumercellular.com/shopping/choose/plan",i.plans=[{data:"1GB",month:20},{data:"5GB",month:25},{data:"10GB",month:35},{data:"Unlimited Data",month:50}],i.triggerMetrics=function(n){console.log("mbox=",n),adobe&&adobe.target&&adobe.target.trackEvent({mbox:n})}},339:(n,i)=>{var t;Object.defineProperty(i,"__esModule",{value:!0}),i.TestInfo=void 0,(t=i.TestInfo||(i.TestInfo={})).ID="CC030",t.SITE="consumercellular",t.TITLE="1.1 - Show Plan Teaser on HP + Duo CTA Hero Banner",t.CLIENT="brainlab",t.TARGET="https://www.consumercellular.com",t.VARIATION="1"},715:(n,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.MainComponent=void 0;var e=t(951),o=t(935),s=t(339),c=t(120),a=t(359),l=t(216);i.MainComponent=function(){var n=this;this.slideComponent=new l.SlideComponent,this.planComponent=new a.PlanComponent,this.isSliderFound=!1,this.init=function(){new c.TestObserver("body").observe((function(i){for(var t=0;t<i.length;t++){var e=i[t].previousSibling;e&&e.classList&&e.classList.contains("slick-slider")&&e.classList.contains("slick-initialized")&&!n.isSliderFound&&(n.applyModification(),n.isSliderFound=!0)}}))},this.getHtml=function(){return'\n      <div class="main-component" >\n        '.concat(n.slideComponent.getHtml(),"\n        ").concat(n.planComponent.getHtml(),"\n      </div>\n    ").trim()},this.applyModification=function(){console.log("Modification applying....!");var i=document.querySelector(o.selectors.carousalSection);i&&(i.insertAdjacentHTML("beforebegin",n.getHtml()),n.addListener())},this.addListener=function(){var n=document.querySelector("a.shop");n&&n.addEventListener("click",(function(){(0,o.triggerMetrics)("shop-phone-link-click")}))},e.Initializer.init(s.TestInfo,"0.0.1")}},359:(n,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.PlanComponent=void 0;var e=t(935);i.PlanComponent=function(){var n=this;this.getPlanItemHtml=function(n){return'\n      <div class="item" >\n        <div class="heading" >\n          <h2>'.concat(n.data,'</h2>\n          <p>Unlimited Talk & Text</p>\n        </div>\n        <div class="body" >\n          <div class="cost" >\n            <div class="currency" >\n              <p>$</p>\n            </div>\n            <div class="duration" >\n              <p>').concat(n.month,'</p>\n            </div>\n          </div>\n          <div class="text" >\n            <h3>Month</h3>\n          </div>\n        </div>\n      </div>\n    ').trim()},this.getHtml=function(){return'\n      <div class="plan-component" >\n        <div class="component-wrap" >\n          <div class="heading" >\n            <h3>Our Most Popular Plans</h3>\n            <h6>Plans Below Include Unlimited Talk & Text</h6>\n          </div>\n          <div class="plans" >\n            '.concat(e.plans.map((function(i){return n.getPlanItemHtml(i)})).join("\n"),'\n          </div>\n          <div class="footer" >\n            <div class="text" >\n              <p>Plus, Add Lines to Any Plan for just $15</p>\n            </div>\n            <div class="action" >\n              <a href="').concat(e.viewPlanLink,'" >VIEW ALL PLANS</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    ').trim()}}},216:(n,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.SlideComponent=void 0;var e=t(935);i.SlideComponent=function(){this.getHtml=function(){return'\n      <div class="slide-component" >\n        <div class="component-wrap" >\n          <div class="bg-content" >\n            <div class="bg-mobile" >\n              <img src="'.concat(e.slideMobileBgUrl,'" alt="bg-img" >\n            </div>\n            <div class="content" >\n              <div class="headline" >\n                <h1>BIG WIRELESS COVERAGE</h1>\n                <h1>WITHOUT BIG WIRELESS COST.</h1>\n              </div> \n              <div class="features" >\n                <div class="item" >\n                  <div class="icon" >\n                    ').concat(e.rightIconSvg,'\n                  </div>\n                  <div class="text" >\n                    <p>Free activation</p>\n                  </div>\n                </div>\n                <div class="item" >\n                  <div class="icon" >\n                    ').concat(e.rightIconSvg,'\n                  </div>\n                  <div class="text" >\n                    <p>No long-term contracts</p>\n                  </div>\n                </div>\n                <div class="item" >\n                  <div class="icon" >\n                    ').concat(e.rightIconSvg,'\n                  </div>\n                  <div class="text" >\n                    <p>30-day risk-free guarantee</p>\n                  </div>\n                </div>\n                <div class="item" >\n                  <div class="icon" >\n                    ').concat(e.rightIconSvg,'\n                  </div>\n                  <div class="text" >\n                    <p>100% U.S. based customer support</p>\n                  </div>\n                </div>\n              </div>\n              <div class="actions" >\n                <a class="shop" href="').concat(e.shopPhoneLink,'" >SHOP PHONES</a>\n                <a class="bring" href="').concat(e.bringYourLink,'" >BRING YOUR OWN</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ').trim()}}},120:(n,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.TestObserver=void 0;i.TestObserver=function(n){var i=this;this.targetNode=null,this.config={},this.observe=function(n){var t=new MutationObserver(n);return t.observe(i.targetNode,i.config),t},this.targetNode=document.querySelector(n),this.config={childList:!0,subtree:!0,characterData:!0}}},951:(n,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.Initializer=void 0;var t=function(){function n(){}return n.init=function(n,i){document.documentElement.classList.add(n.ID),document.documentElement.classList.add("".concat(n.ID,"-").concat(n.VARIATION)),console.info("ID: ".concat(n.ID,", VARIATION: ").concat(n.VARIATION,", VERSION: ").concat(i," is running.....!"))},n}();i.Initializer=t},454:(n,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.Poller=void 0;var e=t(704);i.Poller=function(){var n=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(i,t,o){n.callback=t,n.options=new e.UserOptions,n.conditionsLength=i.length,o&&(n.options=o),n.timeout=n.options.timeout?new Date(n.getNow()+n.options.timeout).getTime():null;for(var s=0;s<i.length;s++)n.pollForCondition(i[s],n.options.wait,!0,n.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(n.timeout&&n.getNow()>n.timeout)},this.evaluateCondition=function(n){return!!n&&("function"==typeof n?n():!("string"!=typeof n||!document.querySelector(n)))},this.isAllConditionPassed=function(){return n.conditionsLength===n.successfulConditions.length},this.pollForCondition=function(i,t,e,o){if(n.timeout&&n.isTimeOut())return!1;var s=n.evaluateCondition(i);return s?(n.successfulConditions.push(s),n.isAllConditionPassed()&&n.callback(n.successfulConditions)):setTimeout((function(){n.pollForCondition(i,t*o,e,o)}),e?0:t),!0}}},704:(n,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.UserOptions=void 0;i.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},i={};function t(e){var o=i[e];if(void 0!==o)return o.exports;var s=i[e]={exports:{}};return n[e](s,s.exports,t),s.exports}(()=>{var n=t(454),i=t(715);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var e=new i.MainComponent;(new n.Poller).poll(["body"],e.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,