(()=>{"use strict";var e={624:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.triggerMetrics=i.replaceStringSpace=void 0,i.replaceStringSpace=function(e,i){return e.replace(/\s/g,i).toLowerCase()},i.triggerMetrics=function(e){console.log("mbox=",e),adobe.target.trackEvent({mbox:e})}},306:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.triggerMetrics=i.mboxNames=i.quickFilters=i.getSpecificFilterMenuHierarchy=i.pathnames=i.selectors=void 0,i.selectors={shoppingPageContainer:"div#shopping-page-container",gridContainer:"div.grid-container"},i.pathnames={device:"/shopping/choose/device"},i.getSpecificFilterMenuHierarchy=function(e,i){return"div.filter-buttons>div.selection-modifier>div.filter-menu>section:nth-child(".concat(e,")>ul>li:nth-child(").concat(i,")>div")},i.quickFilters=[{id:1,label:"Apple",parentPosition:1,childPosition:1},{id:2,label:"Motorola",parentPosition:1,childPosition:3},{id:3,label:"Nokia",parentPosition:1,childPosition:4}],i.mboxNames={devicePageVisit:"device-page-visit",filterCtaClick:"filter-cta-click"},i.triggerMetrics=function(e){console.log("mbox=",e),adobe.target.trackEvent({mbox:e})}},148:(e,i)=>{var t;Object.defineProperty(i,"__esModule",{value:!0}),i.TestInfo=void 0,(t=i.TestInfo||(i.TestInfo={})).ID="CC012",t.SITE="consumercellular",t.TITLE="4.11 - Quick filters for device types",t.CLIENT="brainlab",t.TARGET="https://www.consumercellular.com/shopping/choose/device",t.VARIATION="control"},252:(e,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.MainComponent=void 0;var n=t(951),o=t(306),r=t(148),s=t(331),c=t(354),a=t(308),l=t(191);i.MainComponent=function(){var e=this;this.location="",this.isGridContainerFound=!1,this.isFilterMenuFound=!1,this.quickFilterComponent=new a.QuickFilterComponent,this.variation=r.TestInfo.VARIATION.toString(),this.serviceComponent=new l.ServiceComponent,this.isControlMetricsAdded=!1,this.init=function(){s.LocationObserver.listen((function(i){e.location=i,e.isGridContainerFound=!1,e.isFilterMenuFound=!1,e.isControlMetricsAdded=!1,e.location===o.pathnames.device&&(0,o.triggerMetrics)(o.mboxNames.devicePageVisit)})),new c.TestObserver("body").observe((function(i){for(var t=0;t<i.length;t++){var n=i[t].target;n&&n.classList&&n.classList.contains("filter-menu")&&!e.isFilterMenuFound&&e.location===o.pathnames.device&&!e.isControlMetricsAdded&&"control"===e.variation&&(e.serviceComponent.addMainFilterMetrics(),e.isControlMetricsAdded=!0),n&&n.classList&&n.classList.contains("cciShoppingLayout")&&!e.isFilterMenuFound&&e.location===o.pathnames.device&&!e.isControlMetricsAdded&&"control"===e.variation&&(e.serviceComponent.addMainFilterMetrics(),e.isControlMetricsAdded=!0),n&&n.classList&&!e.isGridContainerFound&&n.classList.contains("grid-item-container")&&e.location===o.pathnames.device&&("1"===e.variation&&e.quickFilterComponent.render(),e.isGridContainerFound=!0),n&&n.classList&&!e.isGridContainerFound&&n.classList.contains("grid-container")&&e.location===o.pathnames.device&&("1"===e.variation&&e.quickFilterComponent.render(),e.isGridContainerFound=!0),n&&n.classList&&!e.isGridContainerFound&&n.classList.contains("cciShoppingLayout")&&e.location===o.pathnames.device&&("1"===e.variation&&e.quickFilterComponent.render(),e.isGridContainerFound=!0)}}))},n.Initializer.init(r.TestInfo,"0.0.16")}},308:(e,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.QuickFilterComponent=void 0;var n=t(624),o=t(306);i.QuickFilterComponent=function(){var e=this;this.getQuickFilterItemHtml=function(e){return'\n      <div class="filer-menu" >\n        <div class="" id="'.concat(e.id,'" >').concat(e.label,"</div>\n      </div\n    ").trim()},this.getHtml=function(){return'\n      <div class="quick-filer-component" >\n        '.concat(o.quickFilters.map((function(i){return e.getQuickFilterItemHtml(i)})),'.join("\n")}\n      <div>\n    ').trim()},this.render=function(){var i=document.querySelector(o.selectors.gridContainer);i&&(i.insertAdjacentHTML("beforebegin",e.getHtml()),e.makeReactive())},this.makeReactive=function(){var i=document.querySelectorAll("div.quick-filer-component>div.filer-menu>div");i&&0!==i.length&&i.forEach((function(i){i.addEventListener("click",(function(){var t=i.getAttribute("id");e.filter(t),i.classList.toggle("active"),(0,n.triggerMetrics)(o.mboxNames.filterCtaClick)}))}))},this.filter=function(e){if(e){var i=Number(e),t=o.quickFilters.find((function(e){return e.id===i}));if(t){var n=(0,o.getSpecificFilterMenuHierarchy)(t.parentPosition,t.childPosition),r=document.querySelector(n);r&&r.click()}}}}},191:(e,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.ServiceComponent=void 0;var n=t(306);i.ServiceComponent=function(){var e=this;this.addMainFilterMetrics=function(){n.quickFilters.forEach((function(i){var t=(0,n.getSpecificFilterMenuHierarchy)(i.parentPosition,i.childPosition),o=document.querySelector(t);o&&e.addListener(o)}))},this.addListener=function(e){e.addEventListener("click",(function(){(0,n.triggerMetrics)(n.mboxNames.filterCtaClick)}))}}},331:(e,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.LocationObserver=void 0;var n=t(354),o=function(){function e(){}var i;return i=e,e.previousPathname="",e.listen=function(e){new n.TestObserver("body").observe((function(t){location.pathname!==i.previousPathname&&(i.previousPathname=location.pathname,e(location.pathname))}))},e}();i.LocationObserver=o},354:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.TestObserver=void 0;i.TestObserver=function(e){var i=this;this.targetNode=null,this.config={},this.observe=function(e){var t=new MutationObserver(e);return t.observe(i.targetNode,i.config),t},this.targetNode=document.querySelector(e),this.config={childList:!0,subtree:!0,characterData:!0}}},951:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.Initializer=void 0;var t=function(){function e(){}return e.init=function(e,i){document.documentElement.classList.add(e.ID),document.documentElement.classList.add("".concat(e.ID,"-").concat(e.VARIATION)),console.info("ID: ".concat(e.ID,", VARIATION: ").concat(e.VARIATION,", VERSION: ").concat(i," is running.....!"))},e}();i.Initializer=t},454:(e,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.Poller=void 0;var n=t(704);i.Poller=function(){var e=this;this.options=null,this.timeout=null,this.successfulConditions=[],this.callback=function(){},this.conditionsLength=0,this.poll=function(i,t,o){e.callback=t,e.options=new n.UserOptions,e.conditionsLength=i.length,o&&(e.options=o),e.timeout=e.options.timeout?new Date(e.getNow()+e.options.timeout).getTime():null;for(var r=0;r<i.length;r++)e.pollForCondition(i[r],e.options.wait,!0,e.options.multiplier)},this.getNow=function(){return(new Date).getTime()},this.isTimeOut=function(){return!!(e.timeout&&e.getNow()>e.timeout)},this.evaluateCondition=function(e){return!!e&&("function"==typeof e?e():!("string"!=typeof e||!document.querySelector(e)))},this.isAllConditionPassed=function(){return e.conditionsLength===e.successfulConditions.length},this.pollForCondition=function(i,t,n,o){if(e.timeout&&e.isTimeOut())return!1;var r=e.evaluateCondition(i);return r?(e.successfulConditions.push(r),e.isAllConditionPassed()&&e.callback(e.successfulConditions)):setTimeout((function(){e.pollForCondition(i,t*o,n,o)}),n?0:t),!0}}},704:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.UserOptions=void 0;i.UserOptions=function(){this.wait=50,this.multiplier=1.1,this.timeout=0}}},i={};function t(n){var o=i[n];if(void 0!==o)return o.exports;var r=i[n]={exports:{}};return e[n](r,r.exports,t),r.exports}(()=>{var e=t(454),i=t(252);if(!/MSIE|Trident|Edge\/(12|13|14|15|16|17|18)/.test(window.navigator.userAgent)){var n=new i.MainComponent;(new e.Poller).poll(["body"],n.init)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,